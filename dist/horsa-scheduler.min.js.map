{"version":3,"file":"horsa-scheduler.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(scheduler, task) {\r\n        this.set_defaults(scheduler, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(scheduler, task) {\r\n        this.action_completed = false;\r\n        this.scheduler = scheduler;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.scheduler.options.bar_height;\r\n        this.handle_width = 8;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.scheduler.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.scheduler.options.step;\r\n        this.width = this.scheduler.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.scheduler.options.column_width *\r\n            this.duration *\r\n            (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = this.handle_width;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - handle_width - 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'mouseover', '.bar-wrapper', (e) => {\r\n            if (!e.target.classList.contains('bar')) return;\r\n            this.show_popup(e.offsetX);\r\n        });\r\n\r\n        $.on(this.group, 'mouseleave', '.bar-wrapper', (e) => {\r\n            if (e.relatedTarget != null &&\r\n                (e.relatedTarget.classList.contains('pointer') ||\r\n                    e.relatedTarget.classList.contains('title'))) return;\r\n            this.scheduler.hide_popup();\r\n        });\r\n\r\n        $.on(this.group, 'click', (e) => {\r\n            if (this.action_completed) return;\r\n\r\n            this.scheduler.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.scheduler.trigger_event('task_dblclick', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup(x = 0, y = 0) {\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.scheduler.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.scheduler.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.scheduler.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n            x: x,\r\n            y: y,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null, y = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.scheduler.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.handle_width * 2 + 3) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        if (y) {\r\n            this.update_attr(bar, 'y', y);\r\n        }\r\n        this.update_label_position();\r\n        this.update_progressbar_position();\r\n        this.update_handle_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    position_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        const new_index = this.compute_index();\r\n        const new_row = this.scheduler.options.rows[new_index];\r\n        if (this.task._index !== new_index) {\r\n            changed = true;\r\n            this.task._index = new_index;\r\n            this.task.row = new_row;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.scheduler.trigger_event('position_change', [\r\n            this.task,\r\n            new_row,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.scheduler.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 200);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.scheduler.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.scheduler.scheduler_start,\r\n            x_in_units * this.scheduler.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.scheduler.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.scheduler.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_index() {\r\n        const bar = this.$bar;\r\n        const row_height = this.scheduler.options.bar_height + this.scheduler.options.padding;\r\n        const new_index = (bar.getY() - this.scheduler.options.header_height) / row_height;\r\n        return Math.ceil(new_index) - 1;\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.scheduler.options;\r\n        const task_start = this.task._start;\r\n        const scheduler_start = this.scheduler.scheduler_start;\r\n\r\n        const diff = date_utils.diff(task_start, scheduler_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.scheduler.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, scheduler_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.scheduler.options.header_height +\r\n            this.scheduler.options.padding +\r\n            this.task._index * (this.height + this.scheduler.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.scheduler.view_is('Week')) {\r\n            rem = dx % (this.scheduler.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 14\r\n                    ? 0\r\n                    : this.scheduler.options.column_width / 7);\r\n        } else if (this.scheduler.view_is('Month')) {\r\n            rem = dx % (this.scheduler.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 60\r\n                    ? 0\r\n                    : this.scheduler.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.scheduler.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 2\r\n                    ? 0\r\n                    : this.scheduler.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute('y', this.$bar.getY());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n        label.setAttribute('y', bar.getY() + bar.getHeight() / 2);\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('y', bar.getY() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - this.handle_width - 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('y', bar.getY() + 1);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(scheduler, from_task, to_task) {\r\n        this.scheduler = scheduler;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.scheduler.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.scheduler.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.from_task.$bar.getY() + this.scheduler.options.bar_height;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\r\n        const end_y =\r\n            this.to_task.$bar.getY() + this.scheduler.options.bar_height / 2;\r\n        // ======= TODO Da capire come gestirlo\r\n        //             this.scheduler.options.header_height +\r\n        //             this.scheduler.options.bar_height +\r\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\r\n        //             this.from_task.task._index +\r\n        //             this.scheduler.options.padding;\r\n\r\n        //         const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\r\n        //         const end_y =\r\n        //             this.scheduler.options.header_height +\r\n        //             this.scheduler.options.bar_height / 2 +\r\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\r\n        //             this.to_task.task._index +\r\n        //             this.scheduler.options.padding;\r\n        // >>>>>>> 5ec8c1cf7d6f126a89a5e5db096915fb66cda0a4\r\n\r\n        const from_is_below_to =\r\n            this.from_task.$bar.getY() > this.to_task.$bar.getY();\r\n        const curve = this.scheduler.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.scheduler.options.arrow_curve\r\n            : end_y - this.scheduler.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.scheduler.options.padding\r\n        ) {\r\n            const down_1 = this.scheduler.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.scheduler.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.is_showing = false;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (this.is_showing) return;\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 8) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-4px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n        if (options.position === 'bottom') {\r\n            const middle_popup = this.parent.clientWidth / 2;\r\n            this.parent.style.left = (options.x - middle_popup) + 'px';\r\n            this.parent.style.top = (position_meta.y + position_meta.height + 10) + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(180deg)';\r\n            this.pointer.style.left = middle_popup + 'px';\r\n            this.pointer.style.top = '-10px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n        this.is_showing = true;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n        this.is_showing = false;\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\n\r\nimport './scheduler.scss';\r\n\r\nconst VIEW_MODE = {\r\n    HOUR: 'Hour',\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Scheduler {\r\n    constructor(wrapper, tasks, cells, options) {\r\n        this.setup_options(options);\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_cells(cells);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Scheduler only supports usage of a string CSS selector,' +\r\n                \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // TODO da capire se da cambiare\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'scheduler',\r\n                id: 'schedulerSvg'\r\n            });\r\n            this.$column_svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'scheduler',\r\n                id: 'columnSvg'\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('scheduler');\r\n            this.$column_svg = svg_element;\r\n            this.$column_svg.classList.add('scheduler');\r\n        }\r\n\r\n        // TODO da rivedere questo giro di wrapper\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('scheduler-grid-container');\r\n        this.$column_container = document.createElement('div');\r\n        this.$column_container.classList.add('scheduler-columns-container');\r\n\r\n        this.$container_parent = document.createElement('div');\r\n        this.$container_parent.classList.add('scheduler-container');\r\n        this.$container_parent.style.height = this.options.container_height + 'px';\r\n        this.$container_parent.appendChild(this.$column_container);\r\n        this.$container_parent.appendChild(this.$container);\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container_parent);\r\n        this.$column_container.appendChild(this.$column_svg);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n\r\n        $.on(this.popup_wrapper, 'mouseleave', '.popup-wrapper', (e) => {\r\n            this.hide_popup();\r\n        });\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            container_height: 300,\r\n            header_height: 50,\r\n            column_width: 30,\r\n            fixed_column_width: 120,\r\n            step: 24,\r\n            date_start: null,\r\n            date_end: null,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_position: 'left',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n            moveable: false,\r\n            fixed_columns: [],\r\n            rows: [],\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n\r\n        if (this.options.date_start)\r\n            this.options.date_start = date_utils.parse(this.options.date_start);\r\n        if (this.options.date_end)\r\n            this.options.date_end = date_utils.parse(this.options.date_end);\r\n    }\r\n\r\n    setup_cells(cells) {\r\n        this.cells = cells.filter(t => t.row && t.column);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.filter(t => t.row).map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = this.options.rows.indexOf(task.row);\r\n            if (task._index === -1) task._index = 0;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        }).filter(t => (\r\n            (!this.options.date_start || t._start >= this.options.date_start) &&\r\n            (!this.options.date_end || t._end <= this.options.date_end))\r\n        );\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks, cells = this.cells, options = this.options) {\r\n        this.setup_options(options);\r\n        this.setup_cells(cells);\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n        if (view_mode === VIEW_MODE.HOUR) {\r\n            this.options.step = 24 / 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_scheduler_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_scheduler_dates() {\r\n        this.scheduler_start = this.options.date_start\r\n        this.scheduler_end = this.options.date_end;\r\n\r\n        if (!this.scheduler_start || !this.scheduler_end)\r\n            for (let task of this.tasks) {\r\n                // set global start and end date\r\n                if (!this.scheduler_start || task._start < this.scheduler_start) {\r\n                    this.scheduler_start = task._start;\r\n                }\r\n                if (!this.scheduler_end || task._end > this.scheduler_end) {\r\n                    this.scheduler_end = task._end;\r\n                }\r\n            }\r\n\r\n        this.scheduler_start = date_utils.start_of(this.scheduler_start, 'day');\r\n        this.scheduler_end = date_utils.start_of(this.scheduler_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (!this.options.date_start) {\r\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -7, 'day');\r\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'year');\r\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -2, 'year');\r\n            } else {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -1, 'month');\r\n            }\r\n        }\r\n\r\n        if (!this.options.date_end) {\r\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 7, 'day');\r\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'year');\r\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 2, 'year');\r\n            } else {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'month');\r\n            }\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.scheduler_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.scheduler_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_events();\r\n        this.bind_cell_events();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_fixed_columns();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        this.fixed_col_layers = {};\r\n        const layers = ['grid', 'arrow', 'progress', 'bar', 'details', 'date'];\r\n        const fixed_col_layers = ['grid', 'cell', 'header'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n        for (let layer of fixed_col_layers) {\r\n            this.fixed_col_layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$column_svg\r\n            });\r\n        }\r\n    }\r\n\r\n    // TODO refactor with single functions?\r\n    make_fixed_columns() {\r\n        // make_grid_background\r\n        const column_grid_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.options.rows.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: column_grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.fixed_col_layers.grid\r\n        });\r\n        $.attr(this.$column_svg, {\r\n            height: grid_height + 30,\r\n            width: column_grid_width,\r\n        });\r\n\r\n        // make_grid_rows // praticamente è identica, cambia solo il layer e la width\r\n        const rows_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\r\n\r\n        const row_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let row of this.options.rows) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                'data-id': row,\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n\r\n        // make_grid_header\r\n        const header_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.fixed_col_layers.header\r\n        });\r\n\r\n        // make_grid_ticks\r\n        let tick_x = this.options.fixed_column_width;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.options.rows.length;\r\n        for (let _ of this.options.fixed_columns) {\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: 'tick thick',\r\n                append_to: this.fixed_col_layers.grid,\r\n            });\r\n\r\n            tick_x += this.options.fixed_column_width;\r\n        }\r\n\r\n        // make_dates -> header\r\n        const pos_y = this.options.header_height;\r\n        let pos_x = this.options.fixed_column_width / 2;\r\n        for (let column of this.options.fixed_columns) {\r\n            createSVG('text', {\r\n                x: pos_x,\r\n                y: pos_y,\r\n                innerHTML: column,\r\n                class: 'lower-text',\r\n                append_to: this.fixed_col_layers.header\r\n            });\r\n            pos_x += (pos_x * 2);\r\n        }\r\n\r\n        // make_bars\r\n        this.make_cells();\r\n    }\r\n\r\n    make_cells() {\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        for (let r = 0; r < this.options.rows.length; r++) {\r\n            for (let c = 0; c < this.options.fixed_columns.length; c++) {\r\n                const cell_wrapper = createSVG('g', {\r\n                    class: 'cell-wrapper',\r\n                    'data-row-id': this.options.rows[r],\r\n                    'data-col-id': this.options.fixed_columns[c],\r\n                    append_to: this.fixed_col_layers.cell,\r\n                });\r\n\r\n                createSVG('rect', {\r\n                    x: c * this.options.fixed_column_width,\r\n                    y: this.options.header_height + this.options.padding / 2 + (row_height) * r,\r\n                    width: this.options.fixed_column_width,\r\n                    height: row_height,\r\n                    append_to: cell_wrapper,\r\n                });\r\n\r\n                const cell = this.cells.find(t => t.row === this.options.rows[r] && t.column === this.options.fixed_columns[c]);\r\n                if (cell) {\r\n                    createSVG('text', {\r\n                        x: this.options.fixed_column_width / 2 + c * this.options.fixed_column_width,\r\n                        y: 15 + this.options.header_height + this.options.padding + r * row_height,\r\n                        innerHTML: ((String(cell.value).slice(0, 25)) + (String(cell.value).length > 25 ? \"...\" : \"\")),\r\n                        class: 'lower-text',\r\n                        append_to: cell_wrapper\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.options.rows.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let row of this.options.rows) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                'data-id': row,\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.date,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.options.rows.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.scheduler_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                this.options.rows.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date_info = null;\r\n        const dates = this.dates.map((date) => {\r\n            const d = this.get_date_info(date, last_date_info);\r\n            last_date_info = d;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date_info) {\r\n        let last_date = null;\r\n        if (last_date_info) {\r\n            last_date = last_date_info.date;\r\n        } else {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            Hour_lower: date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            Hour_upper:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                            date,\r\n                            'D MMM',\r\n                            this.options.language\r\n                        )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        let column_width = this.options.column_width;\r\n        if (this.view_is(VIEW_MODE.MONTH)) {\r\n            column_width =\r\n                (date_utils.get_days_in_month(date) * column_width) / 30;\r\n        }\r\n\r\n        const base_pos = {\r\n            x: last_date_info\r\n                ? last_date_info.base_pos_x + last_date_info.column_width\r\n                : 0,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            Hour_lower: 0,\r\n            Hour_upper: column_width * 24 / 2,\r\n            'Quarter Day_lower': (column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: column_width / 2,\r\n            Day_upper: (column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (column_width * 4) / 2,\r\n            Month_lower: column_width / 2,\r\n            Month_upper: (column_width * 12) / 2,\r\n            Year_lower: column_width / 2,\r\n            Year_upper: (column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            date,\r\n            column_width,\r\n            base_pos_x: base_pos.x,\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.get_bar(dependency.id), // from_task\r\n                        this.get_bar(task.id) // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.scheduler_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n            this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_events() {\r\n        $.on(this.$svg, 'click', '.grid-row, .grid-header', () => {\r\n            this.unselect_all();\r\n            this.hide_popup();\r\n        });\r\n\r\n        $.on(this.$svg, 'dblclick', '.grid-row', (e) => {\r\n            const data_id = e.target.getAttribute('data-id');\r\n            this.trigger_event('grid_dblclick', [data_id]);\r\n        });\r\n\r\n        $.on(this.$container, 'scroll', e => {\r\n            this.$column_container.scrollTop = e.currentTarget.scrollTop;\r\n            this.layers.date.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\r\n            this.fixed_col_layers.header.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\r\n        });\r\n    }\r\n\r\n    bind_cell_events() {\r\n        $.on(this.$column_svg, 'dblclick', '.cell-wrapper', (e) => {\r\n            const cell_wrapper = $.closest('.cell-wrapper', e.target);\r\n            const data_row_id = cell_wrapper.getAttribute('data-row-id');\r\n            const data_col_id = cell_wrapper.getAttribute('data-col-id');\r\n            this.trigger_event('cell_dblclick', [data_row_id, data_col_id]);\r\n        });\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bars, the dragged bar and its children\r\n        const min_y = this.options.header_height;\r\n        const max_y =\r\n            this.options.header_height +\r\n            this.options.rows.length *\r\n            (this.options.bar_height + this.options.padding);\r\n        this.bar_being_dragged = null; // instanceof dragged bar\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => {\r\n                const bar = this.get_bar(id);\r\n                if (parent_bar_id === id) {\r\n                    this.bar_being_dragged = bar;\r\n                }\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n                $bar.finaldy = 0;\r\n                return bar;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            this.hide_popup();\r\n\r\n            // update the dragged bar\r\n            const bar_being_dragged = this.bar_being_dragged;\r\n            bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\r\n            if (is_resizing_left) {\r\n                bar_being_dragged.update_bar_position({\r\n                    x:\r\n                        bar_being_dragged.$bar.ox +\r\n                        bar_being_dragged.$bar.finaldx,\r\n                    width:\r\n                        bar_being_dragged.$bar.owidth -\r\n                        bar_being_dragged.$bar.finaldx,\r\n                });\r\n            } else if (is_resizing_right) {\r\n                bar_being_dragged.update_bar_position({\r\n                    width:\r\n                        bar_being_dragged.$bar.owidth +\r\n                        bar_being_dragged.$bar.finaldx,\r\n                });\r\n            } else if (is_dragging) {\r\n                if (!this.options.moveable) {\r\n                    bar_being_dragged.update_bar_position({\r\n                        x:\r\n                            bar_being_dragged.$bar.ox +\r\n                            bar_being_dragged.$bar.finaldx\r\n                    });\r\n                }\r\n                else {\r\n                    // TODO improve max_y and get_snap_y_position\r\n                    const y = bar_being_dragged.$bar.oy + dy;\r\n                    if (y < min_y) {\r\n                        dy = min_y - bar_being_dragged.$bar.oy;\r\n                    } else if (y > max_y) {\r\n                        dy = max_y - bar_being_dragged.$bar.oy;\r\n                    }\r\n                    bar_being_dragged.$bar.finaldy = this.get_snap_y_position(dy);\r\n                    bar_being_dragged.update_bar_position({\r\n                        x:\r\n                            bar_being_dragged.$bar.ox +\r\n                            bar_being_dragged.$bar.finaldx,\r\n                        y: this.options.moveable ?\r\n                            bar_being_dragged.$bar.oy +\r\n                            bar_being_dragged.$bar.finaldy\r\n                            : null,\r\n                    });\r\n                }\r\n            }\r\n\r\n            // update children\r\n            bars.forEach((bar) => {\r\n                if (bar.task.id === parent_bar_id) {\r\n                    return;\r\n                }\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_x_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    bar.update_bar_position({\r\n                        x: $bar.ox + $bar.finaldx,\r\n                    });\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({\r\n                        x: $bar.ox + $bar.finaldx,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => {\r\n                    bar.group.classList.remove('active');\r\n\r\n                    const $bar = bar.$bar;\r\n                    if ($bar.finaldx || $bar.finaldy) {\r\n                        bar.position_changed();\r\n                        bar.set_action_completed();\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.bar_being_dragged = null;\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_x_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    get_snap_y_position(dy) {\r\n        let ody = dy,\r\n            rem,\r\n            position;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n        rem = ody % row_height;\r\n        position =\r\n            ody -\r\n            rem +\r\n            (rem < row_height / 2\r\n                ? 0\r\n                : row_height);\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        options.position = this.options.popup_position;\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Scheduler\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Scheduler\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nScheduler.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","scheduler","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","handle_width","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","contains","show_popup","offsetX","relatedTarget","hide_popup","unselect_all","trigger_event","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_progressbar_position","update_handle_position","update_arrow_position","position_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","new_index","compute_index","new_row","rows","_index","row","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","scheduler_start","width_in_units","row_height","padding","header_height","ceil","task_start","view_is","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","is_showing","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","middle_popup","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Scheduler","wrapper","tasks","cells","setup_options","setup_wrapper","setup_cells","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$column_svg","$container","createElement","$column_container","$container_parent","container_height","parentElement","popup_wrapper","default_options","fixed_column_width","date_start","date_end","view_modes","view_mode","date_format","popup_position","custom_popup_html","moveable","fixed_columns","assign","filter","t","column","start","end","indexOf","every","deps","trim","random","toString","generate_id","setup_dependencies","dependency_map","refresh","mode","update_view_scale","setup_dates","render","setup_scheduler_dates","setup_date_values","scheduler_end","dates","cur_date","bind_grid_events","bind_cell_events","bind_bar_events","clear","setup_layers","make_fixed_columns","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","fixed_col_layers","layer","column_grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_y","x1","y1","x2","y2","header","tick_x","tick_y","tick_height","_","pos_y","pos_x","make_cells","r","c","cell_wrapper","cell","find","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date_info","get_date_info","last_date","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","data_id","scrollTop","currentTarget","data_row_id","data_col_id","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","min_y","max_y","bar_being_dragged","bar_wrapper","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","finaldy","dy","get_snap_x_position","get_snap_y_position","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","ody","querySelectorAll","el","modes","Array","isArray","some","popup","args","apply","prev_date"],"mappings":"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"}
{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = \"year\";\r\nconst MONTH = \"month\";\r\nconst DAY = \"day\";\r\nconst HOUR = \"hour\";\r\nconst MINUTE = \"minute\";\r\nconst SECOND = \"second\";\r\nconst MILLISECOND = \"millisecond\";\r\n\r\nconst SHORTENED = {\r\n  January: \"Jan\",\r\n  February: \"Feb\",\r\n  March: \"Mar\",\r\n  April: \"Apr\",\r\n  May: \"May\",\r\n  June: \"Jun\",\r\n  July: \"Jul\",\r\n  August: \"Aug\",\r\n  September: \"Sep\",\r\n  October: \"Oct\",\r\n  November: \"Nov\",\r\n  December: \"Dec\"\r\n};\r\n\r\nexport default {\r\n  parse_duration(duration) {\r\n    const regex = /([0-9])+(y|m|d|h|min|s|ms)/gm;\r\n    const matches = regex.exec(duration);\r\n\r\n    if (matches !== null) {\r\n      if (matches[2] === \"y\") {\r\n        return { duration: parseInt(matches[1]), scale: `year` };\r\n      } else if (matches[2] === \"m\") {\r\n        return { duration: parseInt(matches[1]), scale: `month` };\r\n      } else if (matches[2] === \"d\") {\r\n        return { duration: parseInt(matches[1]), scale: `day` };\r\n      } else if (matches[2] === \"h\") {\r\n        return { duration: parseInt(matches[1]), scale: `hour` };\r\n      } else if (matches[2] === \"min\") {\r\n        return { duration: parseInt(matches[1]), scale: `minute` };\r\n      } else if (matches[2] === \"s\") {\r\n        return { duration: parseInt(matches[1]), scale: `second` };\r\n      } else if (matches[2] === \"ms\") {\r\n        return { duration: parseInt(matches[1]), scale: `millisecond` };\r\n      }\r\n    }\r\n  },\r\n  parse(date, date_separator = \"-\", time_separator = /[.:]/) {\r\n    if (date instanceof Date) {\r\n      return date;\r\n    }\r\n    if (typeof date === \"string\") {\r\n      let date_parts, time_parts;\r\n      const parts = date.split(\" \");\r\n      date_parts = parts[0]\r\n        .split(date_separator)\r\n        .map((val) => parseInt(val, 10));\r\n      time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n      // month is 0 indexed\r\n      date_parts[1] = date_parts[1] ? date_parts[1] - 1 : 0;\r\n\r\n      let vals = date_parts;\r\n\r\n      if (time_parts && time_parts.length) {\r\n        if (time_parts.length === 4) {\r\n          time_parts[3] = \"0.\" + time_parts[3];\r\n          time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n        }\r\n        vals = vals.concat(time_parts);\r\n      }\r\n      return new Date(...vals);\r\n    }\r\n  },\r\n\r\n  to_string(date, with_time = false) {\r\n    if (!(date instanceof Date)) {\r\n      throw new TypeError(\"Invalid argument type\");\r\n    }\r\n    const vals = this.get_date_values(date).map((val, i) => {\r\n      if (i === 1) {\r\n        // add 1 for month\r\n        val = val + 1;\r\n      }\r\n\r\n      if (i === 6) {\r\n        return padStart(val + \"\", 3, \"0\");\r\n      }\r\n\r\n      return padStart(val + \"\", 2, \"0\");\r\n    });\r\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n    return date_string + (with_time ? \" \" + time_string : \"\");\r\n  },\r\n\r\n  format(date, format_string = \"YYYY-MM-DD HH:mm:ss.SSS\", lang = \"en\") {\r\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n      month: \"long\",\r\n    });\r\n    const month_name = dateTimeFormat.format(date);\r\n    const month_name_capitalized =\r\n      month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0));\r\n    const format_map = {\r\n      YYYY: values[0],\r\n      MM: padStart(+values[1] + 1, 2, 0),\r\n      DD: values[2],\r\n      HH: values[3],\r\n      mm: values[4],\r\n      ss: values[5],\r\n      SSS: values[6],\r\n      D: values[2],\r\n      MMMM: month_name_capitalized,\r\n      MMM: month_name_capitalized.slice(0, 3),\r\n    };\r\n\r\n    let str = format_string;\r\n    const formatted_values = [];\r\n\r\n    Object.keys(format_map)\r\n      .sort((a, b) => b.length - a.length) // big string first\r\n      .forEach((key) => {\r\n        if (str.includes(key)) {\r\n          str = str.replaceAll(key, `$${formatted_values.length}`);\r\n          formatted_values.push(format_map[key]);\r\n        }\r\n      });\r\n\r\n    formatted_values.forEach((value, i) => {\r\n      str = str.replaceAll(`$${i}`, value);\r\n    });\r\n\r\n    return str;\r\n  },\r\n\r\n  diff(date_a, date_b, scale = DAY) {\r\n    let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n    milliseconds = date_a - date_b;\r\n    seconds = milliseconds / 1000;\r\n    minutes = seconds / 60;\r\n    hours = minutes / 60;\r\n    days = hours / 24;\r\n    months = days / 30;\r\n    years = months / 12;\r\n\r\n    if (!scale.endsWith(\"s\")) {\r\n      scale += \"s\";\r\n    }\r\n\r\n    return Math.floor(\r\n      {\r\n        milliseconds,\r\n        seconds,\r\n        minutes,\r\n        hours,\r\n        days,\r\n        months,\r\n        years,\r\n      }[scale]\r\n    );\r\n  },\r\n\r\n  today() {\r\n    const vals = this.get_date_values(new Date()).slice(0, 3);\r\n    return new Date(...vals);\r\n  },\r\n\r\n  now() {\r\n    return new Date();\r\n  },\r\n\r\n  add(date, qty, scale) {\r\n    qty = parseInt(qty, 10);\r\n    const vals = [\r\n      date.getFullYear() + (scale === YEAR ? qty : 0),\r\n      date.getMonth() + (scale === MONTH ? qty : 0),\r\n      date.getDate() + (scale === DAY ? qty : 0),\r\n      date.getHours() + (scale === HOUR ? qty : 0),\r\n      date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n      date.getSeconds() + (scale === SECOND ? qty : 0),\r\n      date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n    ];\r\n    return new Date(...vals);\r\n  },\r\n\r\n  start_of(date, scale) {\r\n    const scores = {\r\n      [YEAR]: 6,\r\n      [MONTH]: 5,\r\n      [DAY]: 4,\r\n      [HOUR]: 3,\r\n      [MINUTE]: 2,\r\n      [SECOND]: 1,\r\n      [MILLISECOND]: 0,\r\n    };\r\n\r\n    function should_reset(_scale) {\r\n      const max_score = scores[scale];\r\n      return scores[_scale] <= max_score;\r\n    }\r\n\r\n    const vals = [\r\n      date.getFullYear(),\r\n      should_reset(YEAR) ? 0 : date.getMonth(),\r\n      should_reset(MONTH) ? 1 : date.getDate(),\r\n      should_reset(DAY) ? 0 : date.getHours(),\r\n      should_reset(HOUR) ? 0 : date.getMinutes(),\r\n      should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n      should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n    ];\r\n\r\n    return new Date(...vals);\r\n  },\r\n\r\n  clone(date) {\r\n    return new Date(...this.get_date_values(date));\r\n  },\r\n\r\n  get_date_values(date) {\r\n    return [\r\n      date.getFullYear(),\r\n      date.getMonth(),\r\n      date.getDate(),\r\n      date.getHours(),\r\n      date.getMinutes(),\r\n      date.getSeconds(),\r\n      date.getMilliseconds(),\r\n    ];\r\n  },\r\n\r\n  get_days_in_month(date) {\r\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n    const month = date.getMonth();\r\n\r\n    if (month !== 1) {\r\n      return no_of_days[month];\r\n    }\r\n\r\n    // Feb\r\n    const year = date.getFullYear();\r\n    if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\r\n      return 29;\r\n    }\r\n    return 28;\r\n  },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n  str = str + \"\";\r\n  targetLength = targetLength >> 0;\r\n  padString = String(typeof padString !== \"undefined\" ? padString : \" \");\r\n  if (str.length > targetLength) {\r\n    return String(str);\r\n  } else {\r\n    targetLength = targetLength - str.length;\r\n    if (targetLength > padString.length) {\r\n      padString += padString.repeat(targetLength / padString.length);\r\n    }\r\n    return padString.slice(0, targetLength) + String(str);\r\n  }\r\n}\r\n","export function $(expr, con) {\r\n  return typeof expr === \"string\"\r\n    ? (con || document).querySelector(expr)\r\n    : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n  const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", tag);\r\n  for (let attr in attrs) {\r\n    if (attr === \"append_to\") {\r\n      const parent = attrs.append_to;\r\n      parent.appendChild(elem);\r\n    } else if (attr === \"innerHTML\") {\r\n      elem.innerHTML = attrs.innerHTML;\r\n    } else if (attr === 'clipPath') {\r\n      elem.setAttribute('clip-path', 'url(#' + attrs[attr] + ')');\r\n    } else {\r\n      elem.setAttribute(attr, attrs[attr]);\r\n    }\r\n  }\r\n  return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n  if (animatedSvgElement === svgElement) {\r\n    // triggered 2nd time programmatically\r\n    // trigger artificial click event\r\n    const event = document.createEvent(\"HTMLEvents\");\r\n    event.initEvent(\"click\", true, true);\r\n    event.eventName = \"click\";\r\n    animatedSvgElement.dispatchEvent(event);\r\n  }\r\n}\r\n\r\nfunction getAnimationElement(\r\n  svgElement,\r\n  attr,\r\n  from,\r\n  to,\r\n  dur = \"0.4s\",\r\n  begin = \"0.1s\",\r\n) {\r\n  const animEl = svgElement.querySelector(\"animate\");\r\n  if (animEl) {\r\n    $.attr(animEl, {\r\n      attributeName: attr,\r\n      from,\r\n      to,\r\n      dur,\r\n      begin: \"click + \" + begin, // artificial click\r\n    });\r\n    return svgElement;\r\n  }\r\n\r\n  const animateElement = createSVG(\"animate\", {\r\n    attributeName: attr,\r\n    from,\r\n    to,\r\n    dur,\r\n    begin,\r\n    calcMode: \"spline\",\r\n    values: from + \";\" + to,\r\n    keyTimes: \"0; 1\",\r\n    keySplines: cubic_bezier(\"ease-out\"),\r\n  });\r\n  svgElement.appendChild(animateElement);\r\n\r\n  return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n  return {\r\n    ease: \".25 .1 .25 1\",\r\n    linear: \"0 0 1 1\",\r\n    \"ease-in\": \".42 0 1 1\",\r\n    \"ease-out\": \"0 0 .58 1\",\r\n    \"ease-in-out\": \".42 0 .58 1\",\r\n  }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n  if (!callback) {\r\n    callback = selector;\r\n    $.bind(element, event, callback);\r\n  } else {\r\n    $.delegate(element, event, selector, callback);\r\n  }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n  element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n  event.split(/\\s+/).forEach(function (event) {\r\n    element.addEventListener(event, callback);\r\n  });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n  element.addEventListener(event, function (e) {\r\n    const delegatedTarget = e.target.closest(selector);\r\n    if (delegatedTarget) {\r\n      e.delegatedTarget = delegatedTarget;\r\n      callback.call(this, e, delegatedTarget);\r\n    }\r\n  });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n  if (!element) return null;\r\n\r\n  if (element.matches(selector)) {\r\n    return element;\r\n  }\r\n\r\n  return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n  if (!value && typeof attr === \"string\") {\r\n    return element.getAttribute(attr);\r\n  }\r\n\r\n  if (typeof attr === \"object\") {\r\n    for (let key in attr) {\r\n      $.attr(element, key, attr[key]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  element.setAttribute(attr, value);\r\n};\r\n","import date_utils from \"./date_utils\";\r\nimport { $, createSVG, animateSVG } from \"./svg_utils\";\r\n\r\nexport default class Bar {\r\n  constructor(gantt, task) {\r\n    this.set_defaults(gantt, task);\r\n    this.prepare();\r\n    this.draw();\r\n    this.bind();\r\n  }\r\n\r\n  set_defaults(gantt, task) {\r\n    this.action_completed = false;\r\n    this.gantt = gantt;\r\n    this.task = task;\r\n  }\r\n\r\n  prepare() {\r\n    this.prepare_values();\r\n    this.prepare_helpers();\r\n  }\r\n\r\n  prepare_values() {\r\n    this.invalid = this.task.invalid;\r\n    this.height = this.gantt.options.bar_height;\r\n    this.image_size = this.height - 5;\r\n    this.compute_x();\r\n    this.compute_y();\r\n    this.compute_duration();\r\n    this.corner_radius = this.gantt.options.bar_corner_radius;\r\n    this.width = this.gantt.options.column_width * this.duration;\r\n    this.progress_width =\r\n      this.gantt.options.column_width *\r\n      this.duration *\r\n      (this.task.progress / 100) || 0;\r\n    this.group = createSVG(\"g\", {\r\n      class: \"bar-wrapper\" + (this.task.custom_class ? \" \" + this.task.custom_class : \"\") + (this.task.important ? ' important' : ''),\r\n      \"data-id\": this.task.id,\r\n    });\r\n    this.bar_group = createSVG(\"g\", {\r\n      class: \"bar-group\",\r\n      append_to: this.group,\r\n    });\r\n    this.handle_group = createSVG(\"g\", {\r\n      class: \"handle-group\",\r\n      append_to: this.group,\r\n    });\r\n  }\r\n\r\n  prepare_helpers() {\r\n    SVGElement.prototype.getX = function () {\r\n      return +this.getAttribute(\"x\");\r\n    };\r\n    SVGElement.prototype.getY = function () {\r\n      return +this.getAttribute(\"y\");\r\n    };\r\n    SVGElement.prototype.getWidth = function () {\r\n      return +this.getAttribute(\"width\");\r\n    };\r\n    SVGElement.prototype.getHeight = function () {\r\n      return +this.getAttribute(\"height\");\r\n    };\r\n    SVGElement.prototype.getEndX = function () {\r\n      return this.getX() + this.getWidth();\r\n    };\r\n  }\r\n\r\n  prepare_expected_progress_values() {\r\n    this.compute_expected_progress();\r\n    this.expected_progress_width =\r\n      this.gantt.options.column_width *\r\n      this.duration *\r\n      (this.expected_progress / 100) || 0;\r\n  }\r\n\r\n  draw() {\r\n    this.draw_bar();\r\n    this.draw_progress_bar();\r\n    if (this.gantt.options.show_expected_progress) {\r\n      this.prepare_expected_progress_values();\r\n      this.draw_expected_progress_bar();\r\n    }\r\n    this.draw_label();\r\n    this.draw_resize_handles();\r\n\r\n    if (this.task.thumbnail) {\r\n      this.draw_thumbnail();\r\n    }\r\n  }\r\n\r\n  draw_bar() {\r\n    this.$bar = createSVG(\"rect\", {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.width,\r\n      height: this.height,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"bar\",\r\n      append_to: this.bar_group,\r\n    });\r\n\r\n    animateSVG(this.$bar, \"width\", 0, this.width);\r\n\r\n    if (this.invalid) {\r\n      this.$bar.classList.add(\"bar-invalid\");\r\n    }\r\n  }\r\n\r\n  draw_expected_progress_bar() {\r\n    if (this.invalid) return;\r\n    this.$expected_bar_progress = createSVG(\"rect\", {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.expected_progress_width,\r\n      height: this.height,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"bar-expected-progress\",\r\n      append_to: this.bar_group,\r\n    });\r\n\r\n    animateSVG(\r\n      this.$expected_bar_progress,\r\n      \"width\",\r\n      0,\r\n      this.expected_progress_width\r\n    );\r\n  }\r\n\r\n  draw_progress_bar() {\r\n    if (this.invalid) return;\r\n    this.$bar_progress = createSVG(\"rect\", {\r\n      x: this.x,\r\n      y: this.y,\r\n      width: this.progress_width,\r\n      height: this.height,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"bar-progress\",\r\n      append_to: this.bar_group,\r\n    });\r\n    const x = (date_utils.diff(this.task._start, this.gantt.gantt_start, 'hour') /\r\n      this.gantt.options.step) *\r\n      this.gantt.options.column_width;\r\n\r\n    let $date_highlight = document.createElement(\"div\");\r\n    $date_highlight.id = `${this.task.id}-highlight`\r\n    $date_highlight.classList.add('date-highlight')\r\n    $date_highlight.style.height = this.height * 0.8 + 'px'\r\n    $date_highlight.style.width = this.width + 'px'\r\n    $date_highlight.style.top = this.gantt.options.header_height - 25 + 'px'\r\n    $date_highlight.style.left = x + 'px'\r\n    this.$date_highlight = $date_highlight\r\n    this.gantt.$lower_header.prepend($date_highlight)\r\n\r\n\r\n\r\n    animateSVG(this.$bar_progress, \"width\", 0, this.progress_width);\r\n  }\r\n\r\n  draw_label() {\r\n    let x_coord = this.x + this.$bar.getWidth() / 2;\r\n\r\n    if (this.task.thumbnail) {\r\n      x_coord = this.x + this.image_size + 5;\r\n    }\r\n\r\n    createSVG(\"text\", {\r\n      x: x_coord,\r\n      y: this.y + this.height / 2,\r\n      innerHTML: this.task.name,\r\n      class: \"bar-label\",\r\n      append_to: this.bar_group,\r\n    });\r\n    // labels get BBox in the next tick\r\n    requestAnimationFrame(() => this.update_label_position());\r\n  }\r\n  draw_thumbnail() {\r\n    let x_offset = 10, y_offset = 2;\r\n    let defs, clipPath;\r\n\r\n    defs = createSVG('defs', {\r\n      append_to: this.bar_group\r\n    });\r\n\r\n    createSVG('rect', {\r\n      id: 'rect_' + this.task.id,\r\n      x: this.x + x_offset,\r\n      y: this.y + y_offset,\r\n      width: this.image_size,\r\n      height: this.image_size,\r\n      rx: '15',\r\n      class: 'img_mask',\r\n      append_to: defs\r\n    });\r\n\r\n    clipPath = createSVG('clipPath', {\r\n      id: 'clip_' + this.task.id,\r\n      append_to: defs\r\n    });\r\n\r\n    createSVG('use', {\r\n      href: '#rect_' + this.task.id,\r\n      append_to: clipPath\r\n    });\r\n\r\n    createSVG('image', {\r\n      x: this.x + x_offset,\r\n      y: this.y + y_offset,\r\n      width: this.image_size,\r\n      height: this.image_size,\r\n      class: 'bar-img',\r\n      href: this.task.thumbnail,\r\n      clipPath: 'clip_' + this.task.id,\r\n      append_to: this.bar_group\r\n    });\r\n  }\r\n\r\n  draw_resize_handles() {\r\n    if (this.invalid || this.gantt.options.readonly) return;\r\n\r\n    const bar = this.$bar;\r\n    const handle_width = 8;\r\n\r\n    createSVG(\"rect\", {\r\n      x: bar.getX() + bar.getWidth() + handle_width - 4,\r\n      y: bar.getY() + 1,\r\n      width: handle_width,\r\n      height: this.height - 2,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"handle right\",\r\n      append_to: this.handle_group,\r\n    });\r\n\r\n    createSVG(\"rect\", {\r\n      x: bar.getX() - handle_width - 4,\r\n      y: bar.getY() + 1,\r\n      width: handle_width,\r\n      height: this.height - 2,\r\n      rx: this.corner_radius,\r\n      ry: this.corner_radius,\r\n      class: \"handle left\",\r\n      append_to: this.handle_group,\r\n    });\r\n\r\n    this.$handle_progress = createSVG(\"polygon\", {\r\n      points: this.get_progress_polygon_points().join(\",\"),\r\n      class: \"handle progress\",\r\n      append_to: this.handle_group,\r\n    });\r\n  }\r\n\r\n  get_progress_polygon_points() {\r\n    const bar_progress = this.$bar_progress;\r\n    let icon_width = 10;\r\n    let icon_height = 15;\r\n\r\n    return [\r\n      bar_progress.getEndX() - icon_width / 2,\r\n      bar_progress.getY() + bar_progress.getHeight() / 2,\r\n\r\n      bar_progress.getEndX(),\r\n      bar_progress.getY() + bar_progress.getHeight() / 2 - icon_height / 2,\r\n\r\n      bar_progress.getEndX() + icon_width / 2,\r\n      bar_progress.getY() + bar_progress.getHeight() / 2,\r\n\r\n      bar_progress.getEndX(),\r\n      bar_progress.getY() + bar_progress.getHeight() / 2 + icon_height / 2,\r\n\r\n      bar_progress.getEndX() - icon_width / 2,\r\n      bar_progress.getY() + bar_progress.getHeight() / 2,\r\n    ];\r\n  }\r\n\r\n  bind() {\r\n    if (this.invalid) return;\r\n    this.setup_click_event();\r\n  }\r\n\r\n  setup_click_event() {\r\n    let task_id = this.task.id;\r\n    $.on(this.group, \"mouseover\", (e) => {\r\n      this.gantt.trigger_event(\"hover\", [this.task, e.screenX, e.screenY, e])\r\n    })\r\n\r\n    let timeout;\r\n    $.on(this.group, \"mouseenter\", (e) => timeout = setTimeout(() => {\r\n      this.show_popup(e.offsetX)\r\n      document.querySelector(`#${task_id}-highlight`).style.display = 'block'\r\n    }, 200))\r\n\r\n    $.on(this.group, \"mouseleave\", () => {\r\n      clearTimeout(timeout)\r\n      this.gantt.popup?.hide?.()\r\n      document.querySelector(`#${task_id}-highlight`).style.display = 'none'\r\n    })\r\n\r\n\r\n    $.on(this.group, this.gantt.options.popup_trigger, () => {\r\n      this.gantt.trigger_event(\"click\", [this.task]);\r\n    });\r\n\r\n    $.on(this.group, \"dblclick\", (e) => {\r\n      if (this.action_completed) {\r\n        // just finished a move action, wait for a few seconds\r\n        return;\r\n      }\r\n\r\n      this.gantt.trigger_event(\"double_click\", [this.task]);\r\n    });\r\n  }\r\n\r\n  show_popup(x) {\r\n    if (this.gantt.bar_being_dragged) return;\r\n\r\n    const start_date = date_utils.format(\r\n      this.task._start,\r\n      \"MMM D\",\r\n      this.gantt.options.language,\r\n    );\r\n    const end_date = date_utils.format(\r\n      date_utils.add(this.task._end, -1, \"second\"),\r\n      \"MMM D\",\r\n      this.gantt.options.language,\r\n    );\r\n    const subtitle = `${start_date} -  ${end_date}<br/>Progress: ${this.task.progress}`;\r\n\r\n    this.gantt.show_popup({\r\n      x,\r\n      target_element: this.$bar,\r\n      title: this.task.name,\r\n      subtitle: subtitle,\r\n      task: this.task,\r\n    });\r\n  }\r\n\r\n  update_bar_position({ x = null, width = null }) {\r\n    const bar = this.$bar;\r\n    if (x) {\r\n      // get all x values of parent task\r\n      const xs = this.task.dependencies.map((dep) => {\r\n        return this.gantt.get_bar(dep).$bar.getX();\r\n      });\r\n      // child task must not go before parent\r\n      const valid_x = xs.reduce((_, curr) => {\r\n        return x >= curr;\r\n      }, x);\r\n      if (!valid_x) {\r\n        width = null;\r\n        return;\r\n      }\r\n      this.update_attr(bar, \"x\", x);\r\n      this.$date_highlight.style.left = x + 'px'\r\n    }\r\n    if (width) {\r\n      this.update_attr(bar, \"width\", width);\r\n      this.$date_highlight.style.width = width + 'px'\r\n    }\r\n    this.update_label_position();\r\n    this.update_handle_position();\r\n    if (this.gantt.options.show_expected_progress) {\r\n      this.date_changed();\r\n      this.compute_duration();\r\n      this.update_expected_progressbar_position();\r\n    }\r\n    this.update_progressbar_position();\r\n    this.update_arrow_position();\r\n  }\r\n\r\n  update_label_position_on_horizontal_scroll({ x, sx }) {\r\n    const container = document.querySelector('.gantt-container');\r\n    const label = this.group.querySelector('.bar-label');\r\n    const img = this.group.querySelector('.bar-img') || '';\r\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\r\n\r\n    let barWidthLimit = this.$bar.getX() + this.$bar.getWidth();\r\n    let newLabelX = label.getX() + x;\r\n    let newImgX = img && img.getX() + x || 0;\r\n    let imgWidth = img && img.getBBox().width + 7 || 7;\r\n    let labelEndX = newLabelX + label.getBBox().width + 7;\r\n    let viewportCentral = sx + container.clientWidth / 2;\r\n\r\n    if (label.classList.contains('big')) return;\r\n\r\n    if (labelEndX < barWidthLimit && x > 0 && labelEndX < viewportCentral) {\r\n      label.setAttribute('x', newLabelX);\r\n      if (img) {\r\n        img.setAttribute('x', newImgX);\r\n        img_mask.setAttribute('x', newImgX);\r\n      }\r\n    } else if ((newLabelX - imgWidth) > this.$bar.getX() && x < 0 && labelEndX > viewportCentral) {\r\n      label.setAttribute('x', newLabelX);\r\n      if (img) {\r\n        img.setAttribute('x', newImgX);\r\n        img_mask.setAttribute('x', newImgX);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  date_changed() {\r\n    let changed = false;\r\n    const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n    if (Number(this.task._start) !== Number(new_start_date)) {\r\n      changed = true;\r\n      this.task._start = new_start_date;\r\n    }\r\n\r\n    if (Number(this.task._end) !== Number(new_end_date)) {\r\n      changed = true;\r\n      this.task._end = new_end_date;\r\n    }\r\n\r\n    if (!changed) return;\r\n\r\n    this.gantt.trigger_event(\"date_change\", [\r\n      this.task,\r\n      new_start_date,\r\n      date_utils.add(new_end_date, -1, \"second\"),\r\n    ]);\r\n  }\r\n\r\n  progress_changed() {\r\n    const new_progress = this.compute_progress();\r\n    this.task.progress = new_progress;\r\n    this.gantt.trigger_event(\"progress_change\", [this.task, new_progress]);\r\n  }\r\n\r\n  set_action_completed() {\r\n    this.action_completed = true;\r\n    setTimeout(() => (this.action_completed = false), 1000);\r\n  }\r\n\r\n  compute_start_end_date() {\r\n    const bar = this.$bar;\r\n    const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n    const new_start_date = date_utils.add(\r\n      this.gantt.gantt_start,\r\n      x_in_units * this.gantt.options.step,\r\n      \"hour\",\r\n    );\r\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n    const new_end_date = date_utils.add(\r\n      new_start_date,\r\n      width_in_units * this.gantt.options.step,\r\n      \"hour\",\r\n    );\r\n\r\n    return { new_start_date, new_end_date };\r\n  }\r\n\r\n  compute_progress() {\r\n    const progress =\r\n      (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n    return parseInt(progress, 10);\r\n  }\r\n\r\n  compute_expected_progress() {\r\n    this.expected_progress =\r\n      date_utils.diff(date_utils.today(), this.task._start, \"hour\") /\r\n      this.gantt.options.step;\r\n    this.expected_progress =\r\n      ((this.expected_progress < this.duration\r\n        ? this.expected_progress\r\n        : this.duration) *\r\n        100) /\r\n      this.duration;\r\n  }\r\n\r\n  compute_x() {\r\n    const { step, column_width } = this.gantt.options;\r\n    const task_start = this.task._start;\r\n    const gantt_start = this.gantt.gantt_start;\r\n\r\n    const diff = date_utils.diff(task_start, gantt_start, \"minute\");\r\n    let x = (diff / 60 / step) * column_width;\r\n\r\n    if (this.gantt.view_is(\"Month\")) {\r\n      const diff = date_utils.diff(task_start, gantt_start, \"day\");\r\n      x = (diff * column_width) / 30;\r\n    }\r\n    this.x = Math.floor(x);\r\n  }\r\n\r\n  compute_y() {\r\n    this.y =\r\n      this.gantt.options.header_height +\r\n      this.gantt.options.padding +\r\n      this.task._index * (this.height + this.gantt.options.padding);\r\n  }\r\n\r\n  compute_duration() {\r\n    this.duration =\r\n      date_utils.diff(this.task._end, this.task._start, \"minute\") / 60 /\r\n      this.gantt.options.step;\r\n  }\r\n\r\n  get_snap_position(dx) {\r\n    let odx = dx,\r\n      rem,\r\n      position;\r\n\r\n    if (this.gantt.view_is(\"Week\")) {\r\n      rem = dx % (this.gantt.options.column_width / 7);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 14\r\n          ? 0\r\n          : this.gantt.options.column_width / 7);\r\n    } else if (this.gantt.view_is(\"Month\")) {\r\n      rem = dx % (this.gantt.options.column_width / 30);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 60\r\n          ? 0\r\n          : this.gantt.options.column_width / 30);\r\n    } else {\r\n      rem = dx % this.gantt.options.column_width;\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.gantt.options.column_width / 2\r\n          ? 0\r\n          : this.gantt.options.column_width);\r\n    }\r\n    return position;\r\n  }\r\n\r\n  update_attr(element, attr, value) {\r\n    value = +value;\r\n    if (!isNaN(value)) {\r\n      element.setAttribute(attr, value);\r\n    }\r\n    return element;\r\n  }\r\n\r\n  update_expected_progressbar_position() {\r\n    if (this.invalid) return;\r\n    this.$expected_bar_progress.setAttribute(\"x\", this.$bar.getX());\r\n    this.compute_expected_progress();\r\n    this.$expected_bar_progress.setAttribute(\r\n      \"width\",\r\n      this.gantt.options.column_width *\r\n      this.duration *\r\n      (this.expected_progress / 100) || 0,\r\n    );\r\n  }\r\n\r\n  update_progressbar_position() {\r\n    if (this.invalid || this.gantt.options.readonly) return;\r\n    this.$bar_progress.setAttribute(\"x\", this.$bar.getX());\r\n    this.$bar_progress.setAttribute(\r\n      \"width\",\r\n      this.$bar.getWidth() * (this.task.progress / 100),\r\n    );\r\n  }\r\n\r\n  update_label_position() {\r\n    const img_mask = this.bar_group.querySelector('.img_mask') || '';\r\n    const bar = this.$bar,\r\n      label = this.group.querySelector(\".bar-label\"),\r\n      img = this.group.querySelector('.bar-img');\r\n\r\n\r\n    let padding = 5;\r\n    let x_offset_label_img = this.image_size + 10;\r\n    const labelWidth = label.getBBox().width\r\n    const barWidth = bar.getWidth()\r\n    if (labelWidth > barWidth) {\r\n      label.classList.add(\"big\");\r\n      if (img) {\r\n        img.setAttribute('x', bar.getX() + bar.getWidth() + padding);\r\n        img_mask.setAttribute('x', bar.getX() + bar.getWidth() + padding);\r\n        label.setAttribute('x', bar.getX() + bar.getWidth() + x_offset_label_img);\r\n      } else {\r\n        label.setAttribute('x', bar.getX() + bar.getWidth() + padding);\r\n      }\r\n    } else {\r\n      label.classList.remove(\"big\");\r\n      if (img) {\r\n        img.setAttribute('x', bar.getX() + padding);\r\n        img_mask.setAttribute('x', bar.getX() + padding);\r\n        label.setAttribute('x', bar.getX() + barWidth / 2 + x_offset_label_img);\r\n      } else {\r\n        label.setAttribute('x', bar.getX() + barWidth / 2 - labelWidth / 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  update_handle_position() {\r\n    if (this.invalid || this.gantt.options.readonly) return;\r\n    const bar = this.$bar;\r\n    this.handle_group\r\n      .querySelector(\".handle.left\")\r\n      .setAttribute(\"x\", bar.getX() - 12);\r\n    this.handle_group\r\n      .querySelector(\".handle.right\")\r\n      .setAttribute(\"x\", bar.getEndX() + 4);\r\n    const handle = this.group.querySelector(\".handle.progress\");\r\n    handle && handle.setAttribute(\"points\", this.get_progress_polygon_points());\r\n  }\r\n\r\n  update_arrow_position() {\r\n    this.arrows = this.arrows || [];\r\n    for (let arrow of this.arrows) {\r\n      arrow.update();\r\n    }\r\n  }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n  let getType = {};\r\n  return (\r\n    functionToCheck &&\r\n    getType.toString.call(functionToCheck) === \"[object Function]\"\r\n  );\r\n}\r\n","import { createSVG } from \"./svg_utils\";\r\n\r\nexport default class Arrow {\r\n  constructor(gantt, from_task, to_task) {\r\n    this.gantt = gantt;\r\n    this.from_task = from_task;\r\n    this.to_task = to_task;\r\n\r\n    this.calculate_path();\r\n    this.draw();\r\n  }\r\n\r\n  calculate_path() {\r\n    let start_x =\r\n      this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n    const condition = () =>\r\n      this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n      start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n    while (condition()) {\r\n      start_x -= 10;\r\n    }\r\n\r\n    const start_y =\r\n      this.gantt.options.header_height +\r\n      this.gantt.options.bar_height +\r\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n      this.from_task.task._index +\r\n      this.gantt.options.padding;\r\n\r\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2 - 7;\r\n    const end_y =\r\n      this.gantt.options.header_height +\r\n      this.gantt.options.bar_height / 2 +\r\n      (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n      this.to_task.task._index +\r\n      this.gantt.options.padding;\r\n\r\n    const from_is_below_to =\r\n      this.from_task.task._index > this.to_task.task._index;\r\n    const curve = this.gantt.options.arrow_curve;\r\n    const clockwise = from_is_below_to ? 1 : 0;\r\n    const curve_y = from_is_below_to ? -curve : curve;\r\n    const offset = from_is_below_to\r\n      ? end_y + this.gantt.options.arrow_curve\r\n      : end_y - this.gantt.options.arrow_curve;\r\n\r\n    this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n    if (\r\n      this.to_task.$bar.getX() <\r\n      this.from_task.$bar.getX() + this.gantt.options.padding\r\n    ) {\r\n      const down_1 = this.gantt.options.padding / 2 - curve;\r\n      const down_2 =\r\n        this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y;\r\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n      this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.element = createSVG(\"path\", {\r\n      d: this.path,\r\n      \"data-from\": this.from_task.task.id,\r\n      \"data-to\": this.to_task.task.id,\r\n    });\r\n  }\r\n\r\n  update() {\r\n    this.calculate_path();\r\n    this.element.setAttribute(\"d\", this.path);\r\n  }\r\n}\r\n","export default class Popup {\r\n  constructor(parent, custom_html) {\r\n    this.parent = parent;\r\n    this.custom_html = custom_html;\r\n    this.make();\r\n  }\r\n\r\n  make() {\r\n    this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n    this.hide();\r\n\r\n    this.title = this.parent.querySelector(\".title\");\r\n    this.subtitle = this.parent.querySelector(\".subtitle\");\r\n    this.pointer = this.parent.querySelector(\".pointer\");\r\n  }\r\n\r\n  show(options) {\r\n    if (!options.target_element) {\r\n      throw new Error(\"target_element is required to show popup\");\r\n    }\r\n    const target_element = options.target_element;\r\n\r\n    if (this.custom_html) {\r\n      let html = this.custom_html(options.task);\r\n      html += '<div class=\"pointer\"></div>';\r\n      this.parent.innerHTML = html;\r\n      this.pointer = this.parent.querySelector(\".pointer\");\r\n    } else {\r\n      // set data\r\n      this.title.innerHTML = options.title;\r\n      this.subtitle.innerHTML = options.subtitle;\r\n    }\r\n\r\n    // set position\r\n    let position_meta;\r\n    if (target_element instanceof HTMLElement) {\r\n      position_meta = target_element.getBoundingClientRect();\r\n    } else if (target_element instanceof SVGElement) {\r\n      position_meta = options.target_element.getBBox();\r\n    }\r\n\r\n    this.parent.style.left = options.x - this.parent.clientWidth / 2 + \"px\";\r\n    this.parent.style.top = position_meta.y + position_meta.height + 10 + \"px\";\r\n\r\n    this.pointer.style.left = this.parent.clientWidth / 2 + \"px\";\r\n    this.pointer.style.top = \"-15px\";\r\n\r\n    // show\r\n    this.parent.style.opacity = 1;\r\n  }\r\n\r\n  hide() {\r\n    this.parent.style.opacity = 0;\r\n    this.parent.style.left = 0;\r\n  }\r\n}\r\n","import date_utils from \"./date_utils\";\r\nimport { $, createSVG } from \"./svg_utils\";\r\nimport Bar from \"./bar\";\r\nimport Arrow from \"./arrow\";\r\nimport Popup from \"./popup\";\r\n\r\nimport \"./gantt.scss\";\r\n\r\nconst VIEW_MODE = {\r\n  HOUR: \"Hour\",\r\n  QUARTER_DAY: \"Quarter Day\",\r\n  HALF_DAY: \"Half Day\",\r\n  DAY: \"Day\",\r\n  WEEK: \"Week\",\r\n  MONTH: \"Month\",\r\n  YEAR: \"Year\",\r\n};\r\n\r\nconst VIEW_MODE_PADDING = {\r\n  HOUR: [\"7d\", \"7d\"],\r\n  QUARTER_DAY: [\"7d\", \"7d\"],\r\n  HALF_DAY: [\"7d\", \"7d\"],\r\n  DAY: [\"1m\", \"1m\"],\r\n  WEEK: [\"1m\", \"1m\"],\r\n  MONTH: [\"1m\", \"1m\"],\r\n  YEAR: [\"2y\", \"2y\"],\r\n};\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  header_height: 65,\r\n  column_width: 30,\r\n  step: 24,\r\n  view_modes: [...Object.values(VIEW_MODE)],\r\n  bar_height: 30,\r\n  bar_corner_radius: 3,\r\n  arrow_curve: 5,\r\n  padding: 18,\r\n  view_mode: \"Day\",\r\n  date_format: \"YYYY-MM-DD\",\r\n  popup_trigger: \"click\",\r\n  show_expected_progress: false,\r\n  popup: null,\r\n  language: \"en\",\r\n  readonly: false,\r\n  highlight_weekend: true,\r\n  scroll_to: 'start',\r\n  lines: 'both',\r\n  auto_move_label: true,\r\n  today_button: true,\r\n  view_mode_select: false,\r\n};\r\n\r\nexport default class Gantt {\r\n  constructor(wrapper, tasks, options) {\r\n    this.setup_wrapper(wrapper);\r\n    this.setup_options(options);\r\n    this.setup_tasks(tasks);\r\n    // initialize with default view mode\r\n    this.change_view_mode();\r\n    this.bind_events();\r\n  }\r\n\r\n  setup_wrapper(element) {\r\n    let svg_element, wrapper_element;\r\n\r\n    // CSS Selector is passed\r\n    if (typeof element === \"string\") {\r\n      element = document.querySelector(element);\r\n    }\r\n\r\n    // get the SVGElement\r\n    if (element instanceof HTMLElement) {\r\n      wrapper_element = element;\r\n      svg_element = element.querySelector(\"svg\");\r\n    } else if (element instanceof SVGElement) {\r\n      svg_element = element;\r\n    } else {\r\n      throw new TypeError(\r\n        \"Frappé Gantt only supports usage of a string CSS selector,\" +\r\n        \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n      );\r\n    }\r\n\r\n    // svg element\r\n    if (!svg_element) {\r\n      // create it\r\n      this.$svg = createSVG(\"svg\", {\r\n        append_to: wrapper_element,\r\n        class: \"gantt\",\r\n      });\r\n    } else {\r\n      this.$svg = svg_element;\r\n      this.$svg.classList.add(\"gantt\");\r\n    }\r\n\r\n    // wrapper element\r\n    this.$container = document.createElement(\"div\");\r\n    this.$container.classList.add(\"gantt-container\");\r\n\r\n    const parent_element = this.$svg.parentElement;\r\n    parent_element.appendChild(this.$container);\r\n    this.$container.appendChild(this.$svg);\r\n\r\n    // popup wrapper\r\n    this.$popup_wrapper = document.createElement(\"div\");\r\n    this.$popup_wrapper.classList.add(\"popup-wrapper\");\r\n    this.$container.appendChild(this.$popup_wrapper);\r\n  }\r\n\r\n  setup_options(options) {\r\n    this.options = { ...DEFAULT_OPTIONS, ...options }\r\n    if (!options.view_mode_padding) options.view_mode_padding = {}\r\n    for (let [key, value] of Object.entries(options.view_mode_padding)) {\r\n      if (typeof value === \"string\") {\r\n        // Configure for single value given\r\n        options.view_mode_padding[key] = [value, value];\r\n      }\r\n    }\r\n\r\n    this.options.view_mode_padding = {\r\n      ...VIEW_MODE_PADDING,\r\n      ...options.view_mode_padding,\r\n    };\r\n  }\r\n\r\n  setup_tasks(tasks) {\r\n    // prepare tasks\r\n    this.tasks = tasks.map((task, i) => {\r\n      // convert to Date objects\r\n      task._start = date_utils.parse(task.start);\r\n      if (task.end === undefined && task.duration !== undefined) {\r\n        task.end = task._start;\r\n        let durations = task.duration.split(\" \");\r\n\r\n        durations.forEach((tmpDuration) => {\r\n          let { duration, scale } = date_utils.parse_duration(tmpDuration);\r\n          task.end = date_utils.add(task.end, duration, scale);\r\n        });\r\n      }\r\n      task._end = date_utils.parse(task.end);\r\n      let diff = date_utils.diff(task._end, task._start, \"year\");\r\n      if (diff < 0) {\r\n        throw Error(\"start of task can't be after end of task: in task #, \" + (i + 1))\r\n      }\r\n      // make task invalid if duration too large\r\n      if (date_utils.diff(task._end, task._start, \"year\") > 10) {\r\n        task.end = null;\r\n      }\r\n\r\n      // cache index\r\n      task._index = i;\r\n\r\n      // invalid dates\r\n      if (!task.start && !task.end) {\r\n        const today = date_utils.today();\r\n        task._start = today;\r\n        task._end = date_utils.add(today, 2, \"day\");\r\n      }\r\n\r\n      if (!task.start && task.end) {\r\n        task._start = date_utils.add(task._end, -2, \"day\");\r\n      }\r\n\r\n      if (task.start && !task.end) {\r\n        task._end = date_utils.add(task._start, 2, \"day\");\r\n      }\r\n\r\n      // if hours is not set, assume the last day is full day\r\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n      const task_end_values = date_utils.get_date_values(task._end);\r\n      if (task_end_values.slice(3).every((d) => d === 0)) {\r\n        task._end = date_utils.add(task._end, 24, \"hour\");\r\n      }\r\n\r\n      // invalid flag\r\n      if (!task.start || !task.end) {\r\n        task.invalid = true;\r\n      }\r\n\r\n      // dependencies\r\n      if (typeof task.dependencies === \"string\" || !task.dependencies) {\r\n        let deps = [];\r\n        if (task.dependencies) {\r\n          deps = task.dependencies\r\n            .split(\",\")\r\n            .map((d) => d.trim().replaceAll(' ', '_'))\r\n            .filter((d) => d);\r\n        }\r\n        task.dependencies = deps;\r\n      }\r\n\r\n      // uids\r\n      if (!task.id) {\r\n        task.id = generate_id(task);\r\n      } else if (typeof task.id === 'string') {\r\n        task.id = task.id.replaceAll(' ', '_')\r\n      } else {\r\n        task.id = `${task.id}`\r\n      }\r\n\r\n      return task;\r\n    });\r\n\r\n    this.setup_dependencies();\r\n  }\r\n\r\n  setup_dependencies() {\r\n    this.dependency_map = {};\r\n    for (let t of this.tasks) {\r\n      for (let d of t.dependencies) {\r\n        this.dependency_map[d] = this.dependency_map[d] || [];\r\n        this.dependency_map[d].push(t.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  refresh(tasks) {\r\n    this.setup_tasks(tasks);\r\n    this.change_view_mode();\r\n  }\r\n\r\n  change_view_mode(mode = this.options.view_mode) {\r\n    this.update_view_scale(mode);\r\n    this.setup_dates();\r\n    this.render();\r\n    // fire viewmode_change event\r\n    this.trigger_event(\"view_change\", [mode]);\r\n  }\r\n\r\n  update_view_scale(view_mode) {\r\n    this.options.view_mode = view_mode;\r\n    if (view_mode === VIEW_MODE.HOUR) {\r\n      this.options.step = 24 / 24;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.DAY) {\r\n      this.options.step = 24;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n      this.options.step = 24 / 2;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n      this.options.step = 24 / 4;\r\n      this.options.column_width = 38;\r\n    } else if (view_mode === VIEW_MODE.WEEK) {\r\n      this.options.step = 24 * 7;\r\n      this.options.column_width = 140;\r\n    } else if (view_mode === VIEW_MODE.MONTH) {\r\n      this.options.step = 24 * 30;\r\n      this.options.column_width = 120;\r\n    } else if (view_mode === VIEW_MODE.YEAR) {\r\n      this.options.step = 24 * 365;\r\n      this.options.column_width = 120;\r\n    }\r\n  }\r\n\r\n  setup_dates() {\r\n    this.setup_gantt_dates();\r\n    this.setup_date_values();\r\n  }\r\n\r\n  setup_gantt_dates() {\r\n    this.gantt_start = this.gantt_end = null;\r\n\r\n    for (let task of this.tasks) {\r\n      // set global start and end date\r\n      if (!this.gantt_start || task._start < this.gantt_start) {\r\n        this.gantt_start = task._start;\r\n      }\r\n      if (!this.gantt_end || task._end > this.gantt_end) {\r\n        this.gantt_end = task._end;\r\n      }\r\n    }\r\n    let gantt_start, gantt_end;\r\n    if (!this.gantt_start) gantt_start = new Date();\r\n    else gantt_start = date_utils.start_of(this.gantt_start, \"day\");\r\n    if (!this.gantt_end) gantt_end = new Date();\r\n    else gantt_end = date_utils.start_of(this.gantt_end, \"day\");\r\n\r\n    // add date padding on both sides\r\n    let viewKey;\r\n    for (let [key, value] of Object.entries(VIEW_MODE)) {\r\n      if (value === this.options.view_mode) {\r\n        viewKey = key;\r\n      }\r\n    }\r\n    const [padding_start, padding_end] = this.options.view_mode_padding[\r\n      viewKey\r\n    ].map(date_utils.parse_duration);\r\n    gantt_start = date_utils.add(\r\n      gantt_start,\r\n      -padding_start.duration,\r\n      padding_start.scale,\r\n    );\r\n\r\n    let format_string;\r\n    if (this.view_is(VIEW_MODE.YEAR)) {\r\n      format_string = \"YYYY\"\r\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n      format_string = \"YYYY-MM\"\r\n    } else if (this.view_is(VIEW_MODE.DAY)) {\r\n      format_string = \"YYYY-MM-DD\"\r\n    } else {\r\n      format_string = \"YYYY-MM-DD HH\"\r\n    }\r\n    this.gantt_start = date_utils.parse(date_utils.format(gantt_start, format_string));\r\n    this.gantt_start.setHours(0, 0, 0, 0)\r\n    this.gantt_end = date_utils.add(\r\n      gantt_end,\r\n      padding_end.duration,\r\n      padding_end.scale,\r\n    );\r\n  }\r\n\r\n  setup_date_values() {\r\n    this.dates = [];\r\n    let cur_date = null;\r\n\r\n    while (cur_date === null || cur_date < this.gantt_end) {\r\n      if (!cur_date) {\r\n        cur_date = date_utils.clone(this.gantt_start);\r\n      } else {\r\n        if (this.view_is(VIEW_MODE.YEAR)) {\r\n          cur_date = date_utils.add(cur_date, 1, \"year\");\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n          cur_date = date_utils.add(cur_date, 1, \"month\");\r\n        } else {\r\n          cur_date = date_utils.add(cur_date, this.options.step, \"hour\");\r\n        }\r\n      }\r\n      this.dates.push(cur_date);\r\n    }\r\n  }\r\n\r\n  bind_events() {\r\n    if (this.options.readonly) return\r\n    this.bind_grid_click();\r\n    this.bind_bar_events();\r\n  }\r\n\r\n  render() {\r\n    this.clear();\r\n    this.setup_layers();\r\n    this.make_grid();\r\n    this.make_dates();\r\n    this.make_bars();\r\n    this.make_grid_extras();\r\n    this.make_arrows();\r\n    this.map_arrows_on_bars();\r\n    this.set_width();\r\n    this.set_scroll_position(this.options.scroll_to);\r\n  }\r\n\r\n  setup_layers() {\r\n    this.layers = {};\r\n    const layers = [\"grid\", \"arrow\", \"progress\", \"bar\", \"details\"];\r\n    // make group layers\r\n    for (let layer of layers) {\r\n      this.layers[layer] = createSVG(\"g\", {\r\n        class: layer,\r\n        append_to: this.$svg,\r\n      });\r\n    }\r\n  }\r\n\r\n  make_grid() {\r\n    this.make_grid_background();\r\n    this.make_grid_rows();\r\n    this.make_grid_header();\r\n  }\r\n\r\n  make_grid_extras() {\r\n    this.make_grid_highlights();\r\n    this.make_grid_ticks();\r\n    this.make_grid_current_time(this.options.view_mode);\r\n  }\r\n\r\n  make_grid_background() {\r\n    const grid_width = this.dates.length * this.options.column_width;\r\n    const grid_height =\r\n      this.options.header_height +\r\n      this.options.padding +\r\n      (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n\r\n    createSVG(\"rect\", {\r\n      x: 0,\r\n      y: 0,\r\n      width: grid_width,\r\n      height: grid_height,\r\n      class: \"grid-background\",\r\n      append_to: this.$svg,\r\n    });\r\n\r\n    $.attr(this.$svg, {\r\n      height: grid_height + this.options.padding + 100,\r\n      width: \"100%\",\r\n    });\r\n  }\r\n\r\n  make_grid_rows() {\r\n    const rows_layer = createSVG(\"g\", { append_to: this.layers.grid });\r\n    const row_width = this.dates.length * this.options.column_width;\r\n    const row_height = this.options.bar_height + this.options.padding;\r\n\r\n    let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n    for (let _ of this.tasks) {\r\n      createSVG(\"rect\", {\r\n        x: 0,\r\n        y: row_y,\r\n        width: row_width,\r\n        height: row_height,\r\n        class: \"grid-row\",\r\n        append_to: rows_layer,\r\n      });\r\n      if (this.options.lines === 'both' || this.options.lines === 'horizontal') {\r\n\r\n      }\r\n\r\n      row_y += this.options.bar_height + this.options.padding;\r\n    }\r\n  }\r\n\r\n  make_grid_header() {\r\n    const curHeader = document.querySelector('.grid-header')\r\n\r\n    let $header = document.createElement(\"div\");\r\n    $header.style.height = this.options.header_height + 10 + \"px\";\r\n    $header.style.width = this.dates.length * this.options.column_width + \"px\";\r\n    $header.classList.add('grid-header')\r\n    this.$header = $header\r\n    this.$container.appendChild($header)\r\n\r\n    let $upper_header = document.createElement(\"div\");\r\n    $upper_header.classList.add('upper-header')\r\n    this.$upper_header = $upper_header\r\n    this.$header.appendChild($upper_header)\r\n\r\n    let $lower_header = document.createElement(\"div\");\r\n    $lower_header.classList.add('lower-header')\r\n    this.$lower_header = $lower_header\r\n    this.$header.appendChild($lower_header)\r\n\r\n    this.make_side_header()\r\n  }\r\n\r\n  make_side_header() {\r\n    let $side_header = document.createElement('div')\r\n    $side_header.classList.add('side-header')\r\n\r\n    // Create view mode change select\r\n    if (this.options.view_mode_select) {\r\n\r\n      const $select = document.createElement(\"select\");\r\n      $select.classList.add('viewmode-select')\r\n\r\n      const $el = document.createElement(\"option\");\r\n      $el.selected = true\r\n      $el.disabled = true\r\n      $el.textContent = 'Mode'\r\n      $select.appendChild($el)\r\n\r\n      for (const key in VIEW_MODE) {\r\n        const $option = document.createElement(\"option\");\r\n        $option.value = VIEW_MODE[key];\r\n        $option.textContent = VIEW_MODE[key];\r\n        $select.appendChild($option);\r\n      }\r\n      // $select.value = this.options.view_mode\r\n      $select.addEventListener(\"change\", (function () {\r\n        this.change_view_mode($select.value)\r\n      }).bind(this));\r\n      $side_header.appendChild($select)\r\n    }\r\n\r\n    // Create today button\r\n    if (this.options.today_button) {\r\n      let $today_button = document.createElement('button')\r\n      $today_button.classList.add('today-button')\r\n      $today_button.textContent = 'Today'\r\n      $today_button.onclick = this.scroll_today.bind(this)\r\n      $side_header.appendChild($today_button)\r\n    }\r\n\r\n    this.$header.appendChild($side_header)\r\n    const { left, y } = this.$header.getBoundingClientRect();\r\n    const width = Math.min(this.$header.clientWidth, this.$container.clientWidth)\r\n    $side_header.style.left = left + this.$container.scrollLeft + width - $side_header.clientWidth + 'px';\r\n    $side_header.style.top = y + 10 + 'px';\r\n  }\r\n\r\n  make_grid_ticks() {\r\n    if (!['both', 'vertical', 'horizontal'].includes(this.options.lines)) return\r\n    let tick_x = 0;\r\n    let tick_y = this.options.header_height + this.options.padding / 2;\r\n    let tick_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n    let $lines_layer = createSVG(\"g\", { class: 'lines_layer', append_to: this.layers.grid });\r\n    let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n    const row_width = this.dates.length * this.options.column_width;\r\n    const row_height = this.options.bar_height + this.options.padding;\r\n    if (this.options.lines !== 'vertical') {\r\n      for (let _ of this.tasks) {\r\n        createSVG(\"line\", {\r\n          x1: 0,\r\n          y1: row_y + row_height,\r\n          x2: row_width,\r\n          y2: row_y + row_height,\r\n          class: \"row-line\",\r\n          append_to: $lines_layer,\r\n        });\r\n        row_y += row_height;\r\n      }\r\n    }\r\n    if (this.options.lines === 'horizontal') return;\r\n    for (let date of this.dates) {\r\n      let tick_class = \"tick\";\r\n      // thick tick for monday\r\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n        tick_class += \" thick\";\r\n      }\r\n      // thick tick for first week\r\n      if (\r\n        this.view_is(VIEW_MODE.WEEK) &&\r\n        date.getDate() >= 1 &&\r\n        date.getDate() < 8\r\n      ) {\r\n        tick_class += \" thick\";\r\n      }\r\n      // thick ticks for quarters\r\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n        tick_class += \" thick\";\r\n      }\r\n\r\n      createSVG(\"path\", {\r\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n        class: tick_class,\r\n        append_to: this.layers.grid,\r\n      });\r\n\r\n      if (this.view_is(VIEW_MODE.MONTH)) {\r\n        tick_x +=\r\n          (date_utils.get_days_in_month(date) * this.options.column_width) / 30;\r\n      } else {\r\n        tick_x += this.options.column_width;\r\n      }\r\n    }\r\n  }\r\n\r\n  make_grid_current_time(view_mode) {\r\n    let tick_x = 0;\r\n    let tick_y = this.options.header_height + this.options.padding / 2;\r\n    let tick_height = (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n    let $current_time = createSVG(\"g\", { class: 'current_time', append_to: this.layers.grid });\r\n\r\n    let today = date_utils.today();\r\n    for (let date of this.dates) {\r\n      if (date.toString() === today.toString()) {\r\n        let current_time_class = \"current-time\";\r\n        let day_columns = 1;\r\n        if (view_mode === VIEW_MODE.HOUR) {\r\n          day_columns = 24;\r\n        }\r\n        if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n          day_columns = 4;\r\n        }\r\n        if (view_mode === VIEW_MODE.HALF_DAY) {\r\n          day_columns = 2;\r\n        }\r\n        let tick_secs = (this.options.column_width * day_columns) / 86400;\r\n        let timestamp = Math.floor(new Date().getTime()) / 1000;\r\n        let today_timestamp = Math.floor(new Date(today).getTime()) / 1000;\r\n        let today_secs = timestamp - today_timestamp;\r\n        tick_x += today_secs * tick_secs;\r\n\r\n        createSVG(\"path\", {\r\n          d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n          class: current_time_class,\r\n          append_to: this.layers.grid,\r\n        });\r\n        return;\r\n      }\r\n      tick_x += this.options.column_width;\r\n    }\r\n  }\r\n\r\n  highlightWeekends() {\r\n    if (!this.view_is('Day') && !this.view_is('Half Day')) return\r\n    for (let d = new Date(this.gantt_start); d <= this.gantt_end; d.setDate(d.getDate() + 1)) {\r\n      if (d.getDay() === 0 || d.getDay() === 6) {\r\n        const x = (date_utils.diff(d, this.gantt_start, 'hour') /\r\n          this.options.step) *\r\n          this.options.column_width;\r\n        const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n        createSVG('rect', {\r\n          x,\r\n          y: this.options.header_height + this.options.padding / 2,\r\n          width: (this.view_is('Day') ? 1 : 2) * this.options.column_width,\r\n          height,\r\n          class: 'holiday-highlight',\r\n          append_to: this.layers.grid,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  //compute the horizontal x distance\r\n  computeGridHighlightDimensions(view_mode) {\r\n    let x = this.options.column_width / 2;\r\n\r\n    if (this.view_is(VIEW_MODE.DAY)) {\r\n      let today = date_utils.today();\r\n      return {\r\n        x: x +\r\n          (date_utils.diff(today, this.gantt_start, \"hour\") / this.options.step) *\r\n          this.options.column_width,\r\n        date: today\r\n      }\r\n    }\r\n\r\n    for (let date of this.dates) {\r\n      const todayDate = new Date();\r\n      const startDate = new Date(date);\r\n      const endDate = new Date(date);\r\n      switch (view_mode) {\r\n        case VIEW_MODE.WEEK:\r\n          endDate.setDate(date.getDate() + 7);\r\n          break;\r\n        case VIEW_MODE.MONTH:\r\n          endDate.setMonth(date.getMonth() + 1);\r\n          break;\r\n        case VIEW_MODE.YEAR:\r\n          endDate.setFullYear(date.getFullYear() + 1);\r\n          break;\r\n      }\r\n      if (todayDate >= startDate && todayDate <= endDate) {\r\n        return { x, date: startDate }\r\n      } else {\r\n        x += this.options.column_width;\r\n      }\r\n    }\r\n  }\r\n\r\n  make_grid_highlights() {\r\n    if (this.options.highlight_weekend) this.highlightWeekends()\r\n    // highlight today's | week's | month's | year's\r\n    if (\r\n      this.view_is(VIEW_MODE.DAY) ||\r\n      this.view_is(VIEW_MODE.WEEK) ||\r\n      this.view_is(VIEW_MODE.MONTH) ||\r\n      this.view_is(VIEW_MODE.YEAR)\r\n    ) {\r\n      // Used as we must find the _end_ of session if view is not Day\r\n      const { x: left, date } = this.computeGridHighlightDimensions(this.options.view_mode)\r\n      const top = this.options.header_height + this.options.padding / 2;\r\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length;\r\n      this.$current_highlight = this.create_el({ top, left, height, classes: 'current-highlight', append_to: this.$container })\r\n      let $today = document.getElementById(date_utils.format(date).replaceAll(' ', '_'))\r\n\r\n      $today.classList.add('current-date-highlight')\r\n      $today.style.top = +$today.style.top.slice(0, -2) - 4 + 'px'\r\n      $today.style.left = +$today.style.left.slice(0, -2) - 8 + 'px'\r\n    }\r\n  }\r\n\r\n  create_el({ left, top, width, height, id, classes, append_to }) {\r\n    let $el = document.createElement(\"div\");\r\n    $el.classList.add(classes)\r\n    $el.style.top = top + 'px'\r\n    $el.style.left = left + 'px'\r\n    if (id) $el.id = id\r\n    if (width) $el.style.width = height + 'px'\r\n    if (height) $el.style.height = height + 'px'\r\n    append_to.appendChild($el)\r\n    return $el\r\n  }\r\n\r\n  make_dates() {\r\n    this.upper_texts_x = {}\r\n    this.get_dates_to_draw().forEach((date, i) => {\r\n      let $lower_text = this.create_el({\r\n        left: date.lower_x,\r\n        top: date.lower_y,\r\n        id: date.formatted_date,\r\n        classes: 'lower-text',\r\n        append_to: this.$lower_header\r\n      })\r\n      $lower_text.innerText = date.lower_text\r\n      $lower_text.style.left = +$lower_text.style.left.slice(0, -2) - $lower_text.clientWidth / 2 + 'px'\r\n\r\n      if (date.upper_text) {\r\n        this.upper_texts_x[date.upper_text] = date.upper_x\r\n        let $upper_text = document.createElement('div');\r\n        $upper_text.classList.add('upper-text')\r\n        $upper_text.style.left = date.upper_x + 'px'\r\n        $upper_text.style.top = date.upper_y + 'px'\r\n        $upper_text.innerText = date.upper_text\r\n        this.$upper_header.appendChild($upper_text)\r\n\r\n        // remove out-of-bound dates\r\n        if (date.upper_x > this.layers.grid.getBBox().width) {\r\n          $upper_text.remove();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  get_dates_to_draw() {\r\n    let last_date = null;\r\n    const dates = this.dates.map((date, i) => {\r\n      const d = this.get_date_info(date, last_date, i);\r\n      last_date = d;\r\n      return d;\r\n    });\r\n    return dates;\r\n  }\r\n\r\n  get_date_info(date, last_date_info) {\r\n    let last_date = last_date_info ? last_date_info.date : date_utils.add(date, 1, \"day\")\r\n    const date_text = {\r\n      Hour_lower: date_utils.format(date, \"HH\", this.options.language),\r\n      \"Quarter Day_lower\": date_utils.format(date, \"HH\", this.options.language),\r\n      \"Half Day_lower\": date_utils.format(date, \"HH\", this.options.language),\r\n      Day_lower:\r\n        date.getDate() !== last_date.getDate()\r\n          ? date_utils.format(date, \"D\", this.options.language)\r\n          : \"\",\r\n      Week_lower:\r\n        date.getMonth() !== last_date.getMonth()\r\n          ? date_utils.format(date, \"D MMM\", this.options.language)\r\n          : date_utils.format(date, \"D\", this.options.language),\r\n      Month_lower: date_utils.format(date, \"MMMM\", this.options.language),\r\n      Year_lower: date_utils.format(date, \"YYYY\", this.options.language),\r\n      Hour_upper:\r\n        date.getDate() !== last_date.getDate()\r\n          ? date_utils.format(date, \"D MMMM\", this.options.language)\r\n          : \"\",\r\n      \"Quarter Day_upper\":\r\n        date.getDate() !== last_date.getDate()\r\n          ? date_utils.format(date, \"D MMM\", this.options.language)\r\n          : \"\",\r\n      \"Half Day_upper\":\r\n        date.getDate() !== last_date.getDate()\r\n          ? date.getMonth() !== last_date.getMonth()\r\n            ? date_utils.format(date, \"D MMM\", this.options.language)\r\n            : date_utils.format(date, \"D\", this.options.language)\r\n          : \"\",\r\n      Day_upper:\r\n        date.getMonth() !== last_date.getMonth() || !last_date_info\r\n          ? date_utils.format(date, \"MMMM\", this.options.language)\r\n          : \"\",\r\n      Week_upper:\r\n        date.getMonth() !== last_date.getMonth()\r\n          ? date_utils.format(date, \"MMMM\", this.options.language)\r\n          : \"\",\r\n      Month_upper:\r\n        date.getFullYear() !== last_date.getFullYear()\r\n          ? date_utils.format(date, \"YYYY\", this.options.language)\r\n          : \"\",\r\n      Year_upper:\r\n        date.getFullYear() !== last_date.getFullYear()\r\n          ? date_utils.format(date, \"YYYY\", this.options.language)\r\n          : \"\",\r\n    };\r\n    let column_width = this.view_is(VIEW_MODE.MONTH) ? (date_utils.get_days_in_month(date) * this.options.column_width) / 30 : this.options.column_width;\r\n    const base_pos = {\r\n      x: last_date_info\r\n        ? last_date_info.base_pos_x + last_date_info.column_width\r\n        : 0,\r\n      lower_y: this.options.header_height - 20,\r\n      upper_y: this.options.header_height - 50,\r\n    };\r\n    const x_pos = {\r\n      Hour_lower: column_width / 2,\r\n      Hour_upper: column_width * 12,\r\n      \"Quarter Day_lower\": column_width / 2,\r\n      \"Quarter Day_upper\": column_width * 2,\r\n      \"Half Day_lower\": column_width / 2,\r\n      \"Half Day_upper\": column_width,\r\n      Day_lower: column_width / 2,\r\n      Day_upper: column_width / 2,\r\n      Week_lower: column_width / 2,\r\n      Week_upper: (column_width * 4) / 2,\r\n      Month_lower: column_width / 2,\r\n      Month_upper: column_width / 2,\r\n      Year_lower: column_width / 2,\r\n      Year_upper: (column_width * 30) / 2,\r\n    };\r\n    return {\r\n      date,\r\n      formatted_date: date_utils.format(date).replaceAll(' ', '_'),\r\n      column_width,\r\n      base_pos_x: base_pos.x,\r\n      upper_text: this.options.lower_text ? this.options.upper_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_upper`]) : date_text[`${this.options.view_mode}_upper`],\r\n      lower_text: this.options.lower_text ? this.options.lower_text(date, this.options.view_mode, date_text[`${this.options.view_mode}_lower`]) : date_text[`${this.options.view_mode}_lower`],\r\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n      upper_y: base_pos.upper_y,\r\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n      lower_y: base_pos.lower_y,\r\n    };\r\n  }\r\n\r\n  make_bars() {\r\n    this.bars = this.tasks.map((task) => {\r\n      const bar = new Bar(this, task);\r\n      this.layers.bar.appendChild(bar.group);\r\n      return bar;\r\n    });\r\n  }\r\n\r\n  make_arrows() {\r\n    this.arrows = [];\r\n    for (let task of this.tasks) {\r\n      let arrows = [];\r\n      arrows = task.dependencies\r\n        .map((task_id) => {\r\n          const dependency = this.get_task(task_id);\r\n          if (!dependency) return;\r\n          const arrow = new Arrow(\r\n            this,\r\n            this.bars[dependency._index], // from_task\r\n            this.bars[task._index], // to_task\r\n          );\r\n          this.layers.arrow.appendChild(arrow.element);\r\n          return arrow;\r\n        })\r\n        .filter(Boolean); // filter falsy values\r\n      this.arrows = this.arrows.concat(arrows);\r\n    }\r\n  }\r\n\r\n  map_arrows_on_bars() {\r\n    for (let bar of this.bars) {\r\n      bar.arrows = this.arrows.filter((arrow) => {\r\n        return (\r\n          arrow.from_task.task.id === bar.task.id ||\r\n          arrow.to_task.task.id === bar.task.id\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  set_width() {\r\n    const cur_width = this.$svg.getBoundingClientRect().width;\r\n    const actual_width = this.$svg.querySelector('.grid .grid-row') ? this.$svg\r\n      .querySelector('.grid .grid-row')\r\n      .getAttribute('width') : 0;\r\n    if (cur_width < actual_width) {\r\n      this.$svg.setAttribute(\"width\", actual_width);\r\n    }\r\n  }\r\n\r\n  set_scroll_position(date) {\r\n    if (!date || date === 'start') {\r\n      date = this.gantt_start\r\n    } else if (date === 'today') {\r\n      return this.scroll_today()\r\n    } else if (typeof date === 'string') {\r\n      date = date_utils.parse(date)\r\n    }\r\n\r\n    const parent_element = this.$svg.parentElement;\r\n    if (!parent_element) return;\r\n\r\n    const hours_before_first_task = date_utils.diff(\r\n      date,\r\n      this.gantt_start,\r\n      \"hour\",\r\n    );\r\n\r\n    const scroll_pos =\r\n      (hours_before_first_task / this.options.step) *\r\n      this.options.column_width -\r\n      this.options.column_width * 4;\r\n    parent_element.scrollTo({ left: scroll_pos, behavior: 'smooth' });\r\n  }\r\n\r\n  scroll_today() {\r\n    this.set_scroll_position(new Date())\r\n  }\r\n\r\n  bind_grid_click() {\r\n    $.on(\r\n      this.$svg,\r\n      this.options.popup_trigger,\r\n      \".grid-row, .grid-header\",\r\n      () => {\r\n        this.unselect_all();\r\n        this.hide_popup();\r\n      },\r\n    );\r\n  }\r\n\r\n  bind_bar_events() {\r\n    let is_dragging = false;\r\n    let x_on_start = 0;\r\n    let x_on_scroll_start = 0;\r\n    let y_on_start = 0;\r\n    let is_resizing_left = false;\r\n    let is_resizing_right = false;\r\n    let parent_bar_id = null;\r\n    let bars = []; // instanceof Bar\r\n    this.bar_being_dragged = null;\r\n\r\n    function action_in_progress() {\r\n      return is_dragging || is_resizing_left || is_resizing_right;\r\n    }\r\n\r\n    $.on(this.$svg, \"mousedown\", \".bar-wrapper, .handle\", (e, element) => {\r\n      const bar_wrapper = $.closest(\".bar-wrapper\", element);\r\n      bars.forEach((bar) => bar.group.classList.remove(\"active\"));\r\n\r\n      if (element.classList.contains(\"left\")) {\r\n        is_resizing_left = true;\r\n      } else if (element.classList.contains(\"right\")) {\r\n        is_resizing_right = true;\r\n      } else if (element.classList.contains(\"bar-wrapper\")) {\r\n        is_dragging = true;\r\n      }\r\n\r\n      bar_wrapper.classList.add(\"active\");\r\n      this.popup.parent.classList.add('hidden')\r\n\r\n      x_on_start = e.offsetX;\r\n      y_on_start = e.offsetY;\r\n\r\n      parent_bar_id = bar_wrapper.getAttribute(\"data-id\");\r\n      const ids = [\r\n        parent_bar_id,\r\n        ...this.get_all_dependent_tasks(parent_bar_id),\r\n      ];\r\n      bars = ids.map((id) => this.get_bar(id));\r\n\r\n      this.bar_being_dragged = parent_bar_id;\r\n\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        $bar.ox = $bar.getX();\r\n        $bar.oy = $bar.getY();\r\n        $bar.owidth = $bar.getWidth();\r\n        $bar.finaldx = 0;\r\n      });\r\n    });\r\n    $.on(this.$container, 'scroll', e => {\r\n      let elements = document.querySelectorAll('.bar-wrapper');\r\n      let localBars = [];\r\n      const ids = [];\r\n      let dx;\r\n      if (x_on_scroll_start) {\r\n        dx = e.currentTarget.scrollLeft - x_on_scroll_start;\r\n      }\r\n\r\n      const daysSinceStart = e.currentTarget.scrollLeft / this.options.column_width * this.options.step / 24;\r\n      let format_str = \"D MMM\"\r\n      if ([\"Year\", \"Month\"].includes(this.options.view_mode)) format_str = 'YYYY'\r\n      else if ([\"Day\", \"Week\"].includes(this.options.view_mode)) format_str = 'MMMM'\r\n      else if (this.view_is('Half Day')) format_str = 'D'\r\n      else if (this.view_is('Hour')) format_str = \"D MMMM\"\r\n\r\n\r\n      let currentUpper = date_utils.format(\r\n        date_utils.add(this.gantt_start, daysSinceStart, 'day'),\r\n        format_str\r\n      );\r\n      const upperTexts = Array.from(document.querySelectorAll('.upper-text'));\r\n      const $el = upperTexts.find(el => el.textContent === currentUpper)\r\n      if ($el && !$el.classList.contains('current-upper')) {\r\n        const $current = document.querySelector('.current-upper')\r\n        if ($current) {\r\n          $current.classList.remove('current-upper')\r\n          $current.style.left = this.upper_texts_x[$current.textContent] + 'px';\r\n          $current.style.top = this.options.header_height - 50 + 'px';\r\n        }\r\n\r\n        $el.classList.add('current-upper')\r\n        let dimensions = this.$svg.getBoundingClientRect()\r\n        $el.style.left = dimensions.x + this.$container.scrollLeft + 10 + 'px';\r\n        $el.style.top = dimensions.y + this.options.header_height - 50 + 'px';\r\n      }\r\n\r\n      Array.prototype.forEach.call(elements, function (el, i) {\r\n        ids.push(el.getAttribute('data-id'));\r\n      });\r\n\r\n      if (dx) {\r\n        localBars = ids.map(id => this.get_bar(id));\r\n        if (this.options.auto_move_label) {\r\n          localBars.forEach(bar => {\r\n            bar.update_label_position_on_horizontal_scroll({ x: dx, sx: e.currentTarget.scrollLeft });\r\n          });\r\n        }\r\n      }\r\n\r\n      x_on_scroll_start = e.currentTarget.scrollLeft;\r\n    });\r\n\r\n    $.on(this.$svg, \"mousemove\", (e) => {\r\n      if (!action_in_progress()) return;\r\n      const dx = e.offsetX - x_on_start;\r\n      const dy = e.offsetY - y_on_start;\r\n\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        $bar.finaldx = this.get_snap_position(dx);\r\n        this.hide_popup();\r\n        if (is_resizing_left) {\r\n          if (parent_bar_id === bar.task.id) {\r\n            bar.update_bar_position({\r\n              x: $bar.ox + $bar.finaldx,\r\n              width: $bar.owidth - $bar.finaldx,\r\n            });\r\n          } else {\r\n            bar.update_bar_position({\r\n              x: $bar.ox + $bar.finaldx,\r\n            });\r\n          }\r\n        } else if (is_resizing_right) {\r\n          if (parent_bar_id === bar.task.id) {\r\n            bar.update_bar_position({\r\n              width: $bar.owidth + $bar.finaldx,\r\n            });\r\n          }\r\n        } else if (is_dragging && !this.options.readonly) {\r\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n        }\r\n      });\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", (e) => {\r\n\r\n      is_dragging = false;\r\n      is_resizing_left = false;\r\n      is_resizing_right = false;\r\n    });\r\n\r\n    $.on(this.$svg, \"mouseup\", (e) => {\r\n      this.bar_being_dragged = null;\r\n      bars.forEach((bar) => {\r\n        const $bar = bar.$bar;\r\n        if (!$bar.finaldx) return;\r\n        bar.date_changed();\r\n        bar.set_action_completed();\r\n      });\r\n    });\r\n\r\n    this.bind_bar_progress();\r\n  }\r\n\r\n  bind_bar_progress() {\r\n    let x_on_start = 0;\r\n    let y_on_start = 0;\r\n    let is_resizing = null;\r\n    let bar = null;\r\n    let $bar_progress = null;\r\n    let $bar = null;\r\n\r\n    $.on(this.$svg, \"mousedown\", \".handle.progress\", (e, handle) => {\r\n      is_resizing = true;\r\n      x_on_start = e.offsetX;\r\n      y_on_start = e.offsetY;\r\n\r\n      const $bar_wrapper = $.closest(\".bar-wrapper\", handle);\r\n      const id = $bar_wrapper.getAttribute(\"data-id\");\r\n      bar = this.get_bar(id);\r\n\r\n      $bar_progress = bar.$bar_progress;\r\n      $bar = bar.$bar;\r\n\r\n      $bar_progress.finaldx = 0;\r\n      $bar_progress.owidth = $bar_progress.getWidth();\r\n      $bar_progress.min_dx = -$bar_progress.getWidth();\r\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n    });\r\n\r\n    $.on(this.$svg, \"mousemove\", (e) => {\r\n      if (!is_resizing) return;\r\n      let dx = e.offsetX - x_on_start;\r\n      let dy = e.offsetY - y_on_start;\r\n\r\n      if (dx > $bar_progress.max_dx) {\r\n        dx = $bar_progress.max_dx;\r\n      }\r\n      if (dx < $bar_progress.min_dx) {\r\n        dx = $bar_progress.min_dx;\r\n      }\r\n\r\n      const $handle = bar.$handle_progress;\r\n      $.attr($bar_progress, \"width\", $bar_progress.owidth + dx);\r\n      $.attr($handle, \"points\", bar.get_progress_polygon_points());\r\n      $bar_progress.finaldx = dx;\r\n    });\r\n\r\n    $.on(this.$svg, \"mouseup\", () => {\r\n      is_resizing = false;\r\n      if (!($bar_progress && $bar_progress.finaldx)) return;\r\n\r\n      $bar_progress.finaldx = 0;\r\n      bar.progress_changed();\r\n      bar.set_action_completed();\r\n      bar = null;\r\n      $bar_progress = null;\r\n      $bar = null;\r\n    });\r\n  }\r\n\r\n  get_all_dependent_tasks(task_id) {\r\n    let out = [];\r\n    let to_process = [task_id];\r\n    while (to_process.length) {\r\n      const deps = to_process.reduce((acc, curr) => {\r\n        acc = acc.concat(this.dependency_map[curr]);\r\n        return acc;\r\n      }, []);\r\n\r\n      out = out.concat(deps);\r\n      to_process = deps.filter((d) => !to_process.includes(d));\r\n    }\r\n\r\n    return out.filter(Boolean);\r\n  }\r\n\r\n  get_snap_position(dx) {\r\n    let odx = dx,\r\n      rem,\r\n      position;\r\n\r\n    if (this.view_is(VIEW_MODE.WEEK)) {\r\n      rem = dx % (this.options.column_width / 7);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 14\r\n          ? 0\r\n          : this.options.column_width / 7);\r\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n      rem = dx % (this.options.column_width / 30);\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 60\r\n          ? 0\r\n          : this.options.column_width / 30);\r\n    } else {\r\n      rem = dx % this.options.column_width;\r\n      position =\r\n        odx -\r\n        rem +\r\n        (rem < this.options.column_width / 2 ? 0 : this.options.column_width);\r\n    }\r\n    return position;\r\n  }\r\n\r\n  unselect_all() {\r\n    [...this.$svg.querySelectorAll(\".bar-wrapper\")].forEach((el) => {\r\n      el.classList.remove(\"active\");\r\n    });\r\n    this.popup.parent.classList.remove('hidden')\r\n  }\r\n\r\n  view_is(modes) {\r\n    if (typeof modes === \"string\") {\r\n      return this.options.view_mode === modes;\r\n    }\r\n\r\n    if (Array.isArray(modes)) {\r\n      return modes.some((mode) => this.options.view_mode === mode);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get_task(id) {\r\n    return this.tasks.find((task) => {\r\n      return task.id === id;\r\n    });\r\n  }\r\n\r\n  get_bar(id) {\r\n    return this.bars.find((bar) => {\r\n      return bar.task.id === id;\r\n    });\r\n  }\r\n\r\n  show_popup(options) {\r\n    if (this.options.popup === false) return\r\n    if (!this.popup) {\r\n      this.popup = new Popup(\r\n        this.$popup_wrapper,\r\n        this.options.popup,\r\n      );\r\n    }\r\n    this.popup.show(options);\r\n  }\r\n\r\n  hide_popup() {\r\n    this.popup && this.popup.hide();\r\n  }\r\n\r\n  trigger_event(event, args) {\r\n    if (this.options[\"on_\" + event]) {\r\n      this.options[\"on_\" + event].apply(null, args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the oldest starting date from the list of tasks\r\n   *\r\n   * @returns Date\r\n   * @memberof Gantt\r\n   */\r\n  get_oldest_starting_date() {\r\n    if (!this.tasks.length) return new Date()\r\n    return this.tasks\r\n      .map((task) => task._start)\r\n      .reduce((prev_date, cur_date) =>\r\n        cur_date <= prev_date ? cur_date : prev_date,\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Clear all elements from the parent svg element\r\n   *\r\n   * @memberof Gantt\r\n   */\r\n  clear() {\r\n    this.$svg.innerHTML = \"\";\r\n    this.$header?.remove?.()\r\n    this.$current_highlight?.remove?.()\r\n    this.popup?.hide?.()\r\n  }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n  return task.name + \"_\" + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse_duration","duration","matches","exec","parseInt","scale","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replaceAll","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","image_size","compute_x","compute_y","compute_duration","corner_radius","bar_corner_radius","width","column_width","progress_width","progress","group","class","custom_class","important","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","prepare_expected_progress_values","compute_expected_progress","expected_progress_width","expected_progress","draw_bar","draw_progress_bar","show_expected_progress","draw_expected_progress_bar","draw_label","draw_resize_handles","thumbnail","draw_thumbnail","$bar","x","y","rx","ry","classList","$expected_bar_progress","$bar_progress","_start","gantt_start","step","$date_highlight","createElement","style","top","header_height","left","$lower_header","prepend","x_coord","requestAnimationFrame","update_label_position","defs","clipPath","href","readonly","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","icon_width","icon_height","setup_click_event","timeout","task_id","trigger_event","screenX","screenY","setTimeout","show_popup","offsetX","display","clearTimeout","popup","hide","popup_trigger","bar_being_dragged","subtitle","language","_end","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","_","curr","update_attr","update_handle_position","date_changed","update_expected_progressbar_position","update_progressbar_position","update_arrow_position","update_label_position_on_horizontal_scroll","sx","container","label","img","img_mask","barWidthLimit","newLabelX","newImgX","imgWidth","getBBox","labelEndX","viewportCentral","clientWidth","contains","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","x_in_units","width_in_units","task_start","view_is","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","x_offset_label_img","labelWidth","barWidth","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","Popup","parent","custom_html","make","pointer","show","Error","html","position_meta","HTMLElement","getBoundingClientRect","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","VIEW_MODE_PADDING","DEFAULT_OPTIONS","view_modes","view_mode","date_format","highlight_weekend","scroll_to","lines","auto_move_label","today_button","view_mode_select","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","parentElement","$popup_wrapper","view_mode_padding","entries","start","undefined","end","tmpDuration","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","viewKey","padding_start","padding_end","setHours","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_grid_extras","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_highlights","make_grid_ticks","make_grid_current_time","grid_width","grid_height","rows_layer","grid","row_width","row_height","row_y","$header","$upper_header","make_side_header","$side_header","$select","$el","selected","disabled","textContent","$option","$today_button","onclick","scroll_today","min","scrollLeft","tick_x","tick_y","tick_height","$lines_layer","x1","y1","x2","y2","tick_class","current_time_class","day_columns","tick_secs","getTime","highlightWeekends","setDate","getDay","computeGridHighlightDimensions","todayDate","startDate","endDate","setMonth","setFullYear","$current_highlight","create_el","classes","$today","getElementById","upper_texts_x","get_dates_to_draw","$lower_text","lower_x","lower_y","formatted_date","innerText","lower_text","upper_text","upper_x","$upper_text","upper_y","last_date","get_date_info","last_date_info","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","scrollTo","behavior","unselect_all","hide_popup","is_dragging","x_on_start","x_on_scroll_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","elements","querySelectorAll","localBars","currentTarget","daysSinceStart","format_str","currentUpper","Array","find","el","$current","dimensions","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","modes","isArray","some","args","apply","get_oldest_starting_date","prev_date"],"mappings":"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"}